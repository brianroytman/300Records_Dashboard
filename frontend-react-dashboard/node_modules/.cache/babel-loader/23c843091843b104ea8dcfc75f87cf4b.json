{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar registerComponent = require(\"../../../core/component_registrator\");\n\nvar SchedulerTimelineWeek = require(\"./ui.scheduler.timeline_week\");\n\nvar dateUtils = require(\"../../../core/utils/date\");\n\nvar workWeekUtils = require(\"./utils.work_week\");\n\nvar toMs = dateUtils.dateToMilliseconds;\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-work-week\";\nvar LAST_DAY_WEEK_INDEX = 5;\nvar SchedulerTimelineWorkWeek = SchedulerTimelineWeek.inherit({\n  _getElementClass: function _getElementClass() {\n    return TIMELINE_CLASS;\n  },\n  _getWeekDuration: function _getWeekDuration() {\n    return 5;\n  },\n  _firstDayOfWeek: function _firstDayOfWeek() {\n    return workWeekUtils.getFirstDayOfWeek(this.option(\"firstDayOfWeek\"));\n  },\n  _isSkippedData: workWeekUtils.isDataOnWeekend,\n  _incrementDate: function _incrementDate(date) {\n    var day = date.getDay();\n\n    if (day === LAST_DAY_WEEK_INDEX) {\n      date.setDate(date.getDate() + 2);\n    }\n\n    this.callBase(date);\n  },\n  _getOffsetByCount: function _getOffsetByCount(cellIndex) {\n    var weekendCount = Math.floor(cellIndex / (5 * this._getCellCountInDay()));\n    return toMs(\"day\") * weekendCount * 2;\n  },\n  _getWeekendsCount: workWeekUtils.getWeekendsCount,\n  _setFirstViewDate: function _setFirstViewDate() {\n    this._firstViewDate = workWeekUtils.getFirstViewDate(this.option(\"currentDate\"), this._firstDayOfWeek());\n\n    this._setStartDayHour(this._firstViewDate);\n  }\n});\nregisterComponent(\"dxSchedulerTimelineWorkWeek\", SchedulerTimelineWorkWeek);\nmodule.exports = SchedulerTimelineWorkWeek;","map":null,"metadata":{},"sourceType":"script"}
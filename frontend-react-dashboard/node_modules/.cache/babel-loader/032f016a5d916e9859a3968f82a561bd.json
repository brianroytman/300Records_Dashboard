{"ast":null,"code":"import _objectSpread from \"/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/go-app/frontend-light-bootstrap-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/go-app/frontend-light-bootstrap-dashboard-react/src/views/UploadRelease.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText'; //import Input from '@material-ui/core/Input';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from \"components/CustomRadio/CustomRadio.jsx\"; //import Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\nclass UploadRelease extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      NewReleaseMessage: {\n        MessageDetails: {\n          partnerName: \"\",\n          releaseDate: \"\",\n          songTitle: \"\",\n          artistName: \"\",\n          genre: \"\"\n        },\n        partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"]\n      }\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      NewReleaseMessage: {\n        MessageDetails: _objectSpread({}, prevState.MessageDetails, {\n          releaseDate: value\n        })\n      }\n    }), () => console.log(this.state.NewReleaseMessage.MessageDetails));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      NewReleaseMessage: {\n        MessageDetails: _objectSpread({}, prevState.MessageDetails, {\n          releaseDate: value\n        })\n      }\n    }), () => console.log(this.state.NewReleaseMessage.MessageDetails));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.NewReleaseMessage.MessageDetails;\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.blob();\n    }).then(function (blob) {\n      FileSaver.saveAs(blob, 'xml_output_300.xml');\n    });\n    /*.then(response => {\n     response.json().then(data => {\n       console.log(\"Successful\" + data);\n     });\n    }).catch(error => {\n       alert(error.message);\n    });\n    }\n    */\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      NewReleaseMessage: {\n        MessageDetails: {\n          partnerName: \"\",\n          releaseDate: \"\",\n          songTitle: \"\",\n          artistName: \"\",\n          genre: \"\"\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"container-fluid\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      title: \"Partner Name\",\n      name: \"partnerName\",\n      options: this.state.NewReleaseMessage.partnerOptions,\n      value: this.state.NewReleaseMessage.MessageDetails.partnerName,\n      placeholder: \"Select Partner\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"date\",\n      name: \"releaseDate\",\n      title: \"Release Date\",\n      value: this.state.NewReleaseMessage.MessageDetails.releaseDate,\n      placeholder: \"Enter the release date\",\n      handleChange: this.handleReleaseDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Song Title\",\n      name: \"songTitle\",\n      value: this.state.NewReleaseMessage.MessageDetails.songTitle,\n      placeholder: \"Enter the song title\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Artist Name\",\n      name: \"artistName\",\n      value: this.state.NewReleaseMessage.MessageDetails.artistName,\n      placeholder: \"Enter the artist name\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Genre\",\n      name: \"genre\",\n      value: this.state.NewReleaseMessage.MessageDetails.genre,\n      placeholder: \"Enter the genre\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleFormSubmit,\n      type: \"primary\",\n      title: \"Submit\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleClearForm,\n      type: \"secondary\",\n      title: \"Clear\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }), \" \");\n  }\n\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default UploadRelease;","map":{"version":3,"sources":["/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/go-app/frontend-light-bootstrap-dashboard-react/src/views/UploadRelease.jsx"],"names":["React","Component","Grid","Row","Col","FormGroup","ControlLabel","FormControl","TextField","makeStyles","FilledInput","FormHelperText","InputLabel","OutlinedInput","Card","FormInputs","UserCard","Radio","Select","Button","Input","avatar","saveAs","FileSaver","UploadRelease","constructor","props","state","NewReleaseMessage","MessageDetails","partnerName","releaseDate","songTitle","artistName","genre","partnerOptions","handleReleaseDate","bind","handleFormSubmit","handleClearForm","handleInput","e","value","target","setState","prevState","console","log","name","preventDefault","releaseData","fetch","method","body","JSON","stringify","headers","Accept","then","response","blob","render","buttonStyle","margin"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  FormGroup,\n  ControlLabel,\n  FormControl\n} from \"react-bootstrap\";\n\nimport { TextField } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n//import Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from  \"components/CustomRadio/CustomRadio.jsx\";\n//import Button from \"components/CustomButton/CustomButton.jsx\";\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\n\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\nclass UploadRelease extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        NewReleaseMessage: {\n          MessageDetails: {\n            partnerName: \"\",\n            releaseDate: \"\",\n            songTitle: \"\",\n            artistName: \"\",\n            genre:\"\"\n          },\n          partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"]\n        },\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        NewReleaseMessage: {\n          MessageDetails: {\n            ...prevState.MessageDetails,\n            releaseDate: value\n        }\n      }\n      }),\n      () => console.log(this.state.NewReleaseMessage.MessageDetails)\n    );\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        NewReleaseMessage: {\n          MessageDetails: {\n            ...prevState.MessageDetails,\n            releaseDate: value\n        }\n      }\n      }),\n      () => console.log(this.state.NewReleaseMessage.MessageDetails)\n    );\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.NewReleaseMessage.MessageDetails;\n\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function(response) {\n          return response.blob();\n    }).then(function(blob) {\n          FileSaver.saveAs(blob, 'xml_output_300.xml');\n    });\n     /*.then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    }).catch(error => {\n        alert(error.message);\n    });\n  }\n  */\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      NewReleaseMessage: {\n        MessageDetails: {\n          partnerName: \"\",\n          releaseDate: \"\",\n          songTitle: \"\",\n          artistName: \"\",\n          genre:\"\"\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n        <Select\n          title={\"Partner Name\"}\n          name={\"partnerName\"}\n          options={this.state.NewReleaseMessage.partnerOptions}\n          value={this.state.NewReleaseMessage.MessageDetails.partnerName}\n          placeholder={\"Select Partner\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        <Input\n          inputType={\"date\"}\n          name={\"releaseDate\"}\n          title={\"Release Date\"}\n          value={this.state.NewReleaseMessage.MessageDetails.releaseDate}\n          placeholder={\"Enter the release date\"}\n          handleChange={this.handleReleaseDate}\n        />{\" \"}\n        {/* Release Date */}\n        <Input\n          inputType={\"text\"}\n          title={\"Song Title\"}\n          name={\"songTitle\"}\n          value={this.state.NewReleaseMessage.MessageDetails.songTitle}\n          placeholder={\"Enter the song title\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the song */}\n        <Input\n          inputType={\"text\"}\n          title={\"Artist Name\"}\n          name={\"artistName\"}\n          value={this.state.NewReleaseMessage.MessageDetails.artistName}\n          placeholder={\"Enter the artist name\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the artist */}\n        <Input\n          inputType={\"text\"}\n          title={\"Genre\"}\n          name={\"genre\"}\n          value={this.state.NewReleaseMessage.MessageDetails.genre}\n          placeholder={\"Enter the genre\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the genre */}\n        <Button\n          action={this.handleFormSubmit}\n          type={\"primary\"}\n          title={\"Submit\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/*Submit */}\n        <Button\n          action={this.handleClearForm}\n          type={\"secondary\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/* Clear the form */}\n      </form>\n    );\n  }\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nexport default UploadRelease;\n"]},"metadata":{},"sourceType":"module"}
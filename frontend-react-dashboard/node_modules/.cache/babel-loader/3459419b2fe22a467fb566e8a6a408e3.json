{"ast":null,"code":"import _objectSpread from \"/Users/brianroytman/Dev/300Records_Dashboard/nodejs-frontend-react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brianroytman/Dev/300Records_Dashboard/nodejs-frontend-react-dashboard/src/views/IngestionTool.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText'; //import Input from '@material-ui/core/Input';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from \"components/CustomRadio/CustomRadio.jsx\"; //import Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\nclass IngestionTool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      MessageDetails: {\n        MessageHeader: {\n          MessageCreatedDateTime: Date().toLocaleString()\n        },\n        MessageSender: {\n          PartyName: {\n            FullName: \"THREEHUNDRED\"\n          },\n          PartyId: \"PADPIDA2014082004R\"\n        },\n        MessageControlType: \"LiveMessage\",\n        MessageRecipient: {\n          PartyName: {\n            FullName: \"Youtube\"\n          },\n          PartyId: \"PADPIDA2014082004R\"\n        },\n        MessageId: \"123456QWERTY\"\n      },\n      messageRecipientNameOptions: [\"Youtube\", \"YouTube_ContentID\"]\n      /*\n      MessageDetails: {\n        messageId: \"1-a\",\n        messageCreatedDateTime: Date().toLocaleString(),\n        messageControlType: \"\",\n        senderPartyId: \"\",\n        isrc: \"\",\n        titleTextArtistName: \"\",\n        //duration: \"\",\n        fullName: \"\",\n        labelName: \"\",\n        pLineText: \"\",\n        pLineYear: \"2020\",\n        genre: \"\",\n        parentalWarningType: \"\",\n        release: {\n          releaseType: releaseType,\n        },\n        fileNameData: \"\",\n        fileNameImage: \"\",\n        icpn: \"\",\n        propertyIdTitleText: \"\",\n        resourceReleaseType: \"\",\n        resourceReference: \"A1\",\n        territoryCode: \"\",\n        releaseLabelName: \"\",\n        releaseTitleText: \"\",\n        releaseIsrc: \"\",\n        languageTitleText: \"\",\n        languageAndScriptCode: \"en\",\n        displayArtistName: \"\",\n        displayParentalWarningType: \"\",\n        originalReleaseDate: \"\",\n      },\n      partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n      parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n      releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n      territoryCodeOptions: [\"Worldwide\", \"Other\"],\n      */\n\n      /*\n      MessageDetails: {\n        messageId: \"\",\n        messageCreatedDateTime: \"\",\n        titleTextArtistName: \"\",\n        //duration: \"\",\n        fullName: \"\",\n        labelName: \"\",\n        year: \"\",\n        pLineText: \"\",\n        genre: \"\",\n        parentalWarningType: \"\",\n        releaseType: \"\",\n        fileNameData: \"\",\n        fileNameImage: \"\",\n        icpn: \"\",\n        propertyIdTitleText: \"\",\n        resourceReleaseType: \"\",\n        territoryCode: \"\",\n        releaseLabelName: \"\",\n        releaseTitleText: \"\",\n        languageTitleText: \"\",\n        displayArtistName: \"\",\n        displayParentalWarningType: \"\",\n        originalReleaseDate: \"\",\n      },\n      */\n      //partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n      //parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n      //releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n      //territoryCodeOptions: [\"Worldwide\", \"Other\"],\n\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      MessageDetails: _objectSpread({}, prevState.MessageDetails, {\n        originalReleaseDate: value\n      })\n    }), () => console.log(this.state.MessageDetails));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      MessageDetails: _objectSpread({}, prevState.MessageDetails, {\n        [name]: value\n      })\n    }), () => console.log(this.state.MessageDetails));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.MessageDetails;\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.blob();\n    }).then(function (blob) {\n      FileSaver.saveAs(blob, 'xml_output_300.xml');\n    });\n    /*.then(response => {\n     response.json().then(data => {\n       console.log(\"Successful\" + data);\n     });\n    }).catch(error => {\n       alert(error.message);\n    });\n    }\n    */\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      MessageDetails: {\n        MessageHeader: {\n          MessageCreatedDateTime: Date().toLocaleString()\n        },\n        MessageSender: {\n          PartyName: {\n            FullName: \"\"\n          },\n          PartyId: \"\"\n        },\n        MessageControlType: \"LiveMessage\",\n        MessageRecipient: {\n          PartyName: {\n            FullName: \"\"\n          },\n          PartyId: \"\"\n        },\n        MessageId: \"\"\n      }\n      /*\n        MessageDetails: {\n          messageId: \"1-a\",\n          messageCreatedDateTime: Date().toLocaleString(),\n          messageControlType: \"LiveMessage\",\n          UpdateIndicator: \"OriginalMessage\",\n          senderPartyId: \"PADPIDA2014082004R\",\n          isrc: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          pLineText: \"\",\n          pLineYear: \"\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          releaseType: \"\",\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          resourceReference: \"A1\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseIsrc: \"\",\n          releaseTitleText: \"\",\n          languageTitleText: \"\",\n          languageAndScriptCode: \"\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        }\n        */\n\n      /*\n      MessageDetails: {\n        partnerName: \"\",\n        releaseDate: \"\",\n        songTitle: \"\",\n        artistName: \"\",\n        genre:\"\",\n        isrc: \"\",\n      }\n      */\n\n    });\n  }\n\n  render() {\n    //const []\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"container-fluid\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }\n    }, \"/*\", /*#__PURE__*/React.createElement(Select, {\n      title: \"Partner Name\",\n      name: \"partnerName\",\n      options: this.state.partnerOptions,\n      value: this.state.MessageDetails.partnerName,\n      placeholder: \"Select Partner\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }\n    }), \" \", \"/*\", /*#__PURE__*/React.createElement(Select, {\n      title: \"Parental Warning Type\",\n      name: \"parentalWarningType\",\n      options: this.state.parentalWarningTypeOptions,\n      value: this.state.MessageDetails.parentalWarningType,\n      placeholder: \"Select Parental Warning Type\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    }), \" \", \"/*\", /*#__PURE__*/React.createElement(Select, {\n      title: \"Release Type\",\n      name: \"releaseType\",\n      options: this.state.releaseTypeOptions,\n      value: this.state.MessageDetails.releaseType,\n      placeholder: \"Select Release Type\",\n      handleChange: this.handleInput //handleChange={setReleaseType(value... )}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }\n    }), \" \", \"/*\", /*#__PURE__*/React.createElement(Select, {\n      title: \"Territory Code\",\n      name: \"territoryCode\",\n      options: this.state.territoryCodeOptions,\n      value: this.state.MessageDetails.territoryCode,\n      placeholder: \"Select Territory Code\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }), \" \", \"/*\", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"date\",\n      name: \"releaseDate\",\n      title: \"Release Date\",\n      value: this.state.MessageDetails.originalReleaseDate,\n      placeholder: \"Enter the release date\",\n      handleChange: this.handleReleaseDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }\n    }), \" \", \"/*\", /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Song Title\",\n      name: \"releaseTitleText\",\n      value: this.state.MessageDetails.releaseTitleText,\n      placeholder: \"Enter the song title\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }), \" \", \"/*\"), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Artist Name\",\n      name: \"titleTextArtistName\",\n      value: this.state.MessageDetails.titleTextArtistName,\n      placeholder: \"Enter the artist name\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }), \" \", \"/*\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Genre\",\n      name: \"genre\",\n      value: this.state.MessageDetails.genre,\n      placeholder: \"Enter the genre\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }), \" \", \"/*\"), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"ISRC\",\n      name: \"isrc\",\n      value: this.state.MessageDetails.isrc,\n      placeholder: \"Enter the ISRC code\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    }), \" \", \"/*\")), \"*/\", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleFormSubmit,\n      type: \"primary\",\n      title: \"Submit\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleClearForm,\n      type: \"secondary\",\n      title: \"Clear\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }\n    }), \" \");\n  }\n\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default IngestionTool;","map":{"version":3,"sources":["/Users/brianroytman/Dev/300Records_Dashboard/nodejs-frontend-react-dashboard/src/views/IngestionTool.jsx"],"names":["React","Component","Grid","Row","Col","FormGroup","ControlLabel","FormControl","TextField","makeStyles","FilledInput","FormHelperText","InputLabel","OutlinedInput","Card","FormInputs","UserCard","Radio","Select","Button","Input","avatar","saveAs","FileSaver","IngestionTool","constructor","props","state","MessageDetails","MessageHeader","MessageCreatedDateTime","Date","toLocaleString","MessageSender","PartyName","FullName","PartyId","MessageControlType","MessageRecipient","MessageId","messageRecipientNameOptions","handleReleaseDate","bind","handleFormSubmit","handleClearForm","handleInput","e","value","target","setState","prevState","originalReleaseDate","console","log","name","preventDefault","releaseData","fetch","method","body","JSON","stringify","headers","Accept","then","response","blob","render","partnerOptions","partnerName","parentalWarningTypeOptions","parentalWarningType","releaseTypeOptions","releaseType","territoryCodeOptions","territoryCode","releaseTitleText","titleTextArtistName","genre","isrc","buttonStyle","margin"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  FormGroup,\n  ControlLabel,\n  FormControl\n} from \"react-bootstrap\";\n\nimport { TextField } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n//import Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from  \"components/CustomRadio/CustomRadio.jsx\";\n//import Button from \"components/CustomButton/CustomButton.jsx\";\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\n\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\nclass IngestionTool extends Component {\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        MessageDetails: {\n          MessageHeader: {\n            MessageCreatedDateTime: Date().toLocaleString(),\n          },\n          MessageSender: {\n            PartyName: {\n              FullName: \"THREEHUNDRED\",\n            },\n            PartyId: \"PADPIDA2014082004R\",\n          },\n          MessageControlType: \"LiveMessage\",\n          MessageRecipient: {\n            PartyName: {\n              FullName: \"Youtube\",\n            },\n            PartyId: \"PADPIDA2014082004R\",\n          },\n          MessageId: \"123456QWERTY\",\n        },\n        messageRecipientNameOptions: [\"Youtube\", \"YouTube_ContentID\"]\n\n        /*\n        MessageDetails: {\n          messageId: \"1-a\",\n          messageCreatedDateTime: Date().toLocaleString(),\n          messageControlType: \"\",\n          senderPartyId: \"\",\n          isrc: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          pLineText: \"\",\n          pLineYear: \"2020\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          release: {\n            releaseType: releaseType,\n          },\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          resourceReference: \"A1\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseTitleText: \"\",\n          releaseIsrc: \"\",\n          languageTitleText: \"\",\n          languageAndScriptCode: \"en\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        },\n        partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n        parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n        releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n        territoryCodeOptions: [\"Worldwide\", \"Other\"],\n        */\n\n        /*\n        MessageDetails: {\n          messageId: \"\",\n          messageCreatedDateTime: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          year: \"\",\n          pLineText: \"\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          releaseType: \"\",\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseTitleText: \"\",\n          languageTitleText: \"\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        },\n        */\n\n        //partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n        //parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n        //releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n        //territoryCodeOptions: [\"Worldwide\", \"Other\"],\n\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        MessageDetails: {\n          ...prevState.MessageDetails,\n          originalReleaseDate: value\n        }\n      }),\n      () => console.log(this.state.MessageDetails)\n    );\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        MessageDetails: {\n          ...prevState.MessageDetails,\n          [name]: value\n        }\n      }),\n      () => console.log(this.state.MessageDetails)\n    );\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.MessageDetails;\n\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function(response) {\n          return response.blob();\n    }).then(function(blob) {\n          FileSaver.saveAs(blob, 'xml_output_300.xml');\n    });\n     /*.then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    }).catch(error => {\n        alert(error.message);\n    });\n  }\n  */\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      MessageDetails: {\n        MessageHeader: {\n          MessageCreatedDateTime: Date().toLocaleString(),\n        },\n        MessageSender: {\n          PartyName: {\n            FullName: \"\",\n          },\n          PartyId: \"\",\n        },\n        MessageControlType: \"LiveMessage\",\n        MessageRecipient: {\n          PartyName: {\n            FullName: \"\",\n          },\n          PartyId: \"\",\n        },\n        MessageId: \"\",\n      }\n\n      /*\n        MessageDetails: {\n          messageId: \"1-a\",\n          messageCreatedDateTime: Date().toLocaleString(),\n          messageControlType: \"LiveMessage\",\n          UpdateIndicator: \"OriginalMessage\",\n          senderPartyId: \"PADPIDA2014082004R\",\n          isrc: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          pLineText: \"\",\n          pLineYear: \"\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          releaseType: \"\",\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          resourceReference: \"A1\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseIsrc: \"\",\n          releaseTitleText: \"\",\n          languageTitleText: \"\",\n          languageAndScriptCode: \"\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        }\n        */\n        /*\n        MessageDetails: {\n          partnerName: \"\",\n          releaseDate: \"\",\n          songTitle: \"\",\n          artistName: \"\",\n          genre:\"\",\n          isrc: \"\",\n        }\n        */\n    });\n  }\n\n  render() {\n    //const []\n\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n      /*\n        <Select\n          title={\"Partner Name\"}\n          name={\"partnerName\"}\n          options={this.state.partnerOptions}\n          value={this.state.MessageDetails.partnerName}\n          placeholder={\"Select Partner\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        /*\n        <Select\n          title={\"Parental Warning Type\"}\n          name={\"parentalWarningType\"}\n          options={this.state.parentalWarningTypeOptions}\n          value={this.state.MessageDetails.parentalWarningType}\n          placeholder={\"Select Parental Warning Type\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        /*\n        <Select\n          title={\"Release Type\"}\n          name={\"releaseType\"}\n          options={this.state.releaseTypeOptions}\n          value={this.state.MessageDetails.releaseType}\n          placeholder={\"Select Release Type\"}\n          handleChange={this.handleInput}\n          //handleChange={setReleaseType(value... )}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        /*\n        <Select\n          title={\"Territory Code\"}\n          name={\"territoryCode\"}\n          options={this.state.territoryCodeOptions}\n          value={this.state.MessageDetails.territoryCode}\n          placeholder={\"Select Territory Code\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        /*\n        <Input\n          inputType={\"date\"}\n          name={\"releaseDate\"}\n          title={\"Release Date\"}\n          value={this.state.MessageDetails.originalReleaseDate}\n          placeholder={\"Enter the release date\"}\n          handleChange={this.handleReleaseDate}\n        />{\" \"}\n        {/* Release Date */}\n        /*\n        <Row>\n          <Col xs=\"6\">\n            <Input\n              inputType={\"text\"}\n              title={\"Song Title\"}\n              name={\"releaseTitleText\"}\n              value={this.state.MessageDetails.releaseTitleText}\n              placeholder={\"Enter the song title\"}\n              handleChange={this.handleInput}\n            />{\" \"}\n            {/* Name of the song */}\n            /*\n          </Col>\n        <Col xs=\"6\">\n          <Input\n            inputType={\"text\"}\n            title={\"Artist Name\"}\n            name={\"titleTextArtistName\"}\n            value={this.state.MessageDetails.titleTextArtistName}\n            placeholder={\"Enter the artist name\"}\n            handleChange={this.handleInput}\n          />{\" \"}\n          {/* Name of the artist */}\n          /*\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"6\">\n            <Input\n              inputType={\"text\"}\n              title={\"Genre\"}\n              name={\"genre\"}\n              value={this.state.MessageDetails.genre}\n              placeholder={\"Enter the genre\"}\n              handleChange={this.handleInput}\n            />{\" \"}\n            {/* Name of the genre */}\n            /*\n          </Col>\n          <Col xs=\"6\">\n            <Input\n              inputType={\"text\"}\n              title={\"ISRC\"}\n              name={\"isrc\"}\n              value={this.state.MessageDetails.isrc}\n              placeholder={\"Enter the ISRC code\"}\n              handleChange={this.handleInput}\n            />{\" \"}\n            {/* ISRC code for the song */}\n            /*\n          </Col>\n        </Row>\n        */\n        <Button\n          action={this.handleFormSubmit}\n          type={\"primary\"}\n          title={\"Submit\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/*Submit */}\n        <Button\n          action={this.handleClearForm}\n          type={\"secondary\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/* Clear the form */}\n      </form>\n    );\n  }\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nexport default IngestionTool;\n"]},"metadata":{},"sourceType":"module"}
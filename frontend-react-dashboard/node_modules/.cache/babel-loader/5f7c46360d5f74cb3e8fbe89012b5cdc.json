{"ast":null,"code":"var _jsxFileName = \"/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/frontend-light-bootstrap-dashboard-react/src/views/UploadRelease.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from \"components/CustomRadio/CustomRadio.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport avatar from \"assets/img/faces/face-3.jpg\";\n/*\nfetch('https://localhost:8000/uploadLive/', {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    firstParam: 'yourValue',\n    secondParam: 'yourOtherValue'\n  })\n});\n*/\n\n/*\nconst singleSchema = single.object({\n  partnerName: single.string().required(),\n  releaseDate: single.string().required(),\n  album: single.string().required(),\n  genre: single.string().required(),\n  upc: single.string().required(),\n  publisher: single.string().required(),\n  publishingYear: single.string().required(),\n  customId: single.string().required(),\n})\n*/\n\nfunction stringifyFormData(fd) {\n  const data = {};\n\n  for (let key of fd.keys()) {\n    data[key] = fd.get(key);\n  }\n\n  return JSON.stringify(data, null, 2);\n}\n\nconst inputParsers = {\n  date(input) {\n    const split = input.split('/');\n    const day = split[1];\n    const month = split[0];\n    const year = split[2];\n    return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n  },\n\n  uppercase(input) {\n    return input.toUpperCase();\n  },\n\n  number(input) {\n    return parseFloat(input);\n  }\n\n};\n\nclass ShakingError extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      key: 0\n    };\n  }\n\n  componentWillReceiveProps() {\n    // update key to remount the component to rerun the animation\n    this.setState({\n      key: ++this.state.key\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: this.state.key,\n      className: \"bounce\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, this.props.text);\n  }\n\n}\n\nclass UploadRelease extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    console.log(\"TEST\"); //setName(e.target.value);\n  }\n\n  handleSubmit(e) {\n    console.log(e);\n    e.preventDefault();\n    console.log(\"SUBMIT BUTTON WAS PRESSED\");\n    const form = e.target;\n    const data = new FormData(form);\n\n    for (let name of data.keys()) {\n      const input = form.elements[name];\n      const parserName = input.dataset.parse;\n      console.log('parser name is', parserName);\n\n      if (parserName) {\n        const parsedValue = inputParsers[parserName](data.get(name));\n        data.set(name, parsedValue);\n      }\n    }\n\n    this.setState({\n      res: stringifyFormData(data),\n      invalid: false,\n      displayErrors: false\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-name\",\n      label: \"Name\",\n      className: classes.textField,\n      value: this.state.name,\n      onChange: this.handleChange('name'),\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-uncontrolled\",\n      label: \"Uncontrolled\",\n      defaultValue: \"foo\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"outlined-required\",\n      label: \"Required\",\n      defaultValue: \"Hello World\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: true,\n      id: \"outlined-error\",\n      label: \"Error\",\n      defaultValue: \"Hello World\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      disabled: true,\n      id: \"outlined-disabled\",\n      label: \"Disabled\",\n      defaultValue: \"Hello World\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-email-input\",\n      label: \"Email\",\n      className: classes.textField,\n      type: \"email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-password-input\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      autoComplete: \"current-password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default UploadRelease;","map":{"version":3,"sources":["/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/frontend-light-bootstrap-dashboard-react/src/views/UploadRelease.jsx"],"names":["React","Component","Grid","Row","Col","FormGroup","ControlLabel","FormControl","TextField","makeStyles","FilledInput","FormHelperText","Input","InputLabel","OutlinedInput","Card","FormInputs","UserCard","Radio","Button","avatar","stringifyFormData","fd","data","key","keys","get","JSON","stringify","inputParsers","date","input","split","day","month","year","uppercase","toUpperCase","number","parseFloat","ShakingError","constructor","state","componentWillReceiveProps","setState","render","props","text","UploadRelease","handleSubmit","bind","handleChange","e","console","log","preventDefault","form","target","FormData","name","elements","parserName","dataset","parse","parsedValue","set","res","invalid","displayErrors","classes","container","textField"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,SAJF,EAKEC,YALF,EAMEC,WANF,QAOO,iBAPP;AASA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,UAAT,QAA2B,sCAA3B;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,OAAOC,KAAP,MAAmB,wCAAnB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;AAaA,SAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7B,QAAMC,IAAI,GAAG,EAAb;;AACD,OAAK,IAAIC,GAAT,IAAgBF,EAAE,CAACG,IAAH,EAAhB,EAA2B;AACzBF,IAAAA,IAAI,CAACC,GAAD,CAAJ,GAAYF,EAAE,CAACI,GAAH,CAAOF,GAAP,CAAZ;AACA;;AACD,SAAOG,IAAI,CAACC,SAAL,CAAeL,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAP;AACD;;AAID,MAAMM,YAAY,GAAG;AACnBC,EAAAA,IAAI,CAACC,KAAD,EAAQ;AACV,UAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAY,GAAZ,CAAd;AACA,UAAMC,GAAG,GAAGD,KAAK,CAAC,CAAD,CAAjB;AACA,UAAME,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAnB;AACA,UAAMG,IAAI,GAAGH,KAAK,CAAC,CAAD,CAAlB;AACA,qBAAUG,IAAV,cAAkBD,KAAlB,cAA2BD,GAA3B;AACD,GAPkB;;AAQnBG,EAAAA,SAAS,CAACL,KAAD,EAAQ;AACf,WAAOA,KAAK,CAACM,WAAN,EAAP;AACD,GAVkB;;AAWnBC,EAAAA,MAAM,CAACP,KAAD,EAAQ;AACZ,WAAOQ,UAAU,CAACR,KAAD,CAAjB;AACD;;AAbkB,CAArB;;AAiBA,MAAMS,YAAN,SAA2BxC,KAAK,CAACC,SAAjC,CAA2C;AAC1CwC,EAAAA,WAAW,GAAG;AACX;AACA,SAAKC,KAAL,GAAa;AAAElB,MAAAA,GAAG,EAAE;AAAP,KAAb;AACD;;AAEFmB,EAAAA,yBAAyB,GAAG;AACzB;AACD,SAAKC,QAAL,CAAc;AAAEpB,MAAAA,GAAG,EAAE,EAAE,KAAKkB,KAAL,CAAWlB;AAApB,KAAd;AACA;;AAEDqB,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAK,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWlB,GAArB;AAA0B,MAAA,SAAS,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8C,KAAKsB,KAAL,CAAWC,IAAzD,CAAP;AACA;;AAbwC;;AAgB3C,MAAMC,aAAN,SAA4B/C,SAA5B,CAAsC;AAGpCwC,EAAAA,WAAW,CAACK,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKJ,KAAL,GAAa,EAAb;AACA,SAAKO,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADc,CAEd;AACD;;AAEDL,EAAAA,YAAY,CAAEG,CAAF,EAAK;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAA,IAAAA,CAAC,CAACG,cAAF;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA,UAAME,IAAI,GAAGJ,CAAC,CAACK,MAAf;AACA,UAAMlC,IAAI,GAAG,IAAImC,QAAJ,CAAaF,IAAb,CAAb;;AAEA,SAAK,IAAIG,IAAT,IAAiBpC,IAAI,CAACE,IAAL,EAAjB,EAA8B;AAC5B,YAAMM,KAAK,GAAGyB,IAAI,CAACI,QAAL,CAAcD,IAAd,CAAd;AACA,YAAME,UAAU,GAAG9B,KAAK,CAAC+B,OAAN,CAAcC,KAAjC;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,UAA9B;;AACA,UAAIA,UAAJ,EAAgB;AACd,cAAMG,WAAW,GAAGnC,YAAY,CAACgC,UAAD,CAAZ,CAAyBtC,IAAI,CAACG,GAAL,CAASiC,IAAT,CAAzB,CAApB;AACApC,QAAAA,IAAI,CAAC0C,GAAL,CAASN,IAAT,EAAeK,WAAf;AACD;AACF;;AAED,SAAKpB,QAAL,CAAc;AACbsB,MAAAA,GAAG,EAAE7C,iBAAiB,CAACE,IAAD,CADT;AAEZ4C,MAAAA,OAAO,EAAE,KAFG;AAGZC,MAAAA,aAAa,EAAE;AAHH,KAAd;AAMD;;AAEDvB,EAAAA,MAAM,GAAG;AAAA,UACCwB,OADD,GACa,KAAKvB,KADlB,CACCuB,OADD;AAEP,wBACE;AAAM,MAAA,SAAS,EAAEA,OAAO,CAACC,SAAzB;AAAoC,MAAA,UAAU,MAA9C;AAA+C,MAAA,YAAY,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,SAAS,EAAED,OAAO,CAACE,SAHrB;AAIE,MAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWiB,IAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKR,YAAL,CAAkB,MAAlB,CALZ;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,OAAO,EAAC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,uBADL;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,YAAY,EAAC,KAHf;AAIE,MAAA,SAAS,EAAEkB,OAAO,CAACE,SAJrB;AAKE,MAAA,MAAM,EAAC,QALT;AAME,MAAA,OAAO,EAAC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAoBE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,mBAFL;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,YAAY,EAAC,aAJf;AAKE,MAAA,SAAS,EAAEF,OAAO,CAACE,SALrB;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,OAAO,EAAC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,eA8BE,oBAAC,SAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,YAAY,EAAC,aAJf;AAKE,MAAA,SAAS,EAAEF,OAAO,CAACE,SALrB;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,OAAO,EAAC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,eAwCE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,mBAFL;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,YAAY,EAAC,aAJf;AAKE,MAAA,SAAS,EAAEF,OAAO,CAACE,SALrB;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,OAAO,EAAC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,eAkDE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,sBADL;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,SAAS,EAAEF,OAAO,CAACE,SAHrB;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,YAAY,EAAC,OANf;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,OAAO,EAAC,UARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDF,eA6DE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,yBADL;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,SAAS,EAAEF,OAAO,CAACE,SAHrB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,YAAY,EAAC,kBALf;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,OAAO,EAAC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7DF,CADF;AAyED;;AApHmC;;AAyHtC,eAAevB,aAAf","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  FormGroup,\n  ControlLabel,\n  FormControl\n} from \"react-bootstrap\";\n\nimport { TextField } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from  \"components/CustomRadio/CustomRadio.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport avatar from \"assets/img/faces/face-3.jpg\";\n\n/*\nfetch('https://localhost:8000/uploadLive/', {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    firstParam: 'yourValue',\n    secondParam: 'yourOtherValue'\n  })\n});\n*/\n\n\n\n/*\nconst singleSchema = single.object({\n  partnerName: single.string().required(),\n  releaseDate: single.string().required(),\n  album: single.string().required(),\n  genre: single.string().required(),\n  upc: single.string().required(),\n  publisher: single.string().required(),\n  publishingYear: single.string().required(),\n  customId: single.string().required(),\n})\n*/\n\nfunction stringifyFormData(fd) {\n  const data = {};\n\tfor (let key of fd.keys()) {\n  \tdata[key] = fd.get(key);\n  }\n  return JSON.stringify(data, null, 2);\n}\n\n\n\nconst inputParsers = {\n  date(input) {\n    const split = input.split('/');\n    const day = split[1]\n    const month = split[0];\n    const year = split[2];\n    return `${year}-${month}-${day}`;\n  },\n  uppercase(input) {\n    return input.toUpperCase();\n  },\n  number(input) {\n    return parseFloat(input);\n  },\n};\n\n\nclass ShakingError extends React.Component {\n\tconstructor() {\n    super();\n    this.state = { key: 0 };\n  }\n\n\tcomponentWillReceiveProps() {\n    // update key to remount the component to rerun the animation\n  \tthis.setState({ key: ++this.state.key });\n  }\n\n  render() {\n  \treturn <div key={this.state.key} className=\"bounce\">{this.props.text}</div>;\n  }\n}\n\nclass UploadRelease extends Component {\n\n\n  constructor(props) {\n      super(props);\n      this.state = {};\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    console.log(\"TEST\");\n    //setName(e.target.value);\n  }\n\n  handleSubmit (e) {\n    console.log(e);\n    e.preventDefault();\n    console.log(\"SUBMIT BUTTON WAS PRESSED\");\n\n    const form = e.target;\n    const data = new FormData(form);\n\n    for (let name of data.keys()) {\n      const input = form.elements[name];\n      const parserName = input.dataset.parse;\n      console.log('parser name is', parserName);\n      if (parserName) {\n        const parsedValue = inputParsers[parserName](data.get(name))\n        data.set(name, parsedValue);\n      }\n    }\n\n    this.setState({\n    \tres: stringifyFormData(data),\n      invalid: false,\n      displayErrors: false,\n    });\n\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          id=\"outlined-name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n        <TextField\n          id=\"outlined-uncontrolled\"\n          label=\"Uncontrolled\"\n          defaultValue=\"foo\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Required\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n        <TextField\n          error\n          id=\"outlined-error\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n        <TextField\n          disabled\n          id=\"outlined-disabled\"\n          label=\"Disabled\"\n          defaultValue=\"Hello World\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n        <TextField\n          id=\"outlined-email-input\"\n          label=\"Email\"\n          className={classes.textField}\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          className={classes.textField}\n          type=\"password\"\n          autoComplete=\"current-password\"\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n     </form>\n    );\n  }\n}\n\n\n\nexport default UploadRelease;\n"]},"metadata":{},"sourceType":"module"}
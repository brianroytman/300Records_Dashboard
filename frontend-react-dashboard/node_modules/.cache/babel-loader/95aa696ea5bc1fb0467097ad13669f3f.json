{"ast":null,"code":"var _jsxFileName = \"/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/frontend-light-bootstrap-dashboard-react/src/views/UploadRelease.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from \"components/CustomRadio/CustomRadio.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport avatar from \"assets/img/faces/face-3.jpg\";\n/*\nfetch('https://localhost:8000/uploadLive/', {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    firstParam: 'yourValue',\n    secondParam: 'yourOtherValue'\n  })\n});\n*/\n\n/*\nconst singleSchema = single.object({\n  partnerName: single.string().required(),\n  releaseDate: single.string().required(),\n  album: single.string().required(),\n  genre: single.string().required(),\n  upc: single.string().required(),\n  publisher: single.string().required(),\n  publishingYear: single.string().required(),\n  customId: single.string().required(),\n})\n*/\n\nfunction stringifyFormData(fd) {\n  const data = {};\n\n  for (let key of fd.keys()) {\n    data[key] = fd.get(key);\n  }\n\n  return JSON.stringify(data, null, 2);\n}\n\nclass ShakingError extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      key: 0\n    };\n  }\n\n  componentWillReceiveProps() {\n    // update key to remount the component to rerun the animation\n    this.setState({\n      key: ++this.state.key\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: this.state.key,\n      className: \"bounce\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, this.props.text);\n  }\n\n}\n\nclass UploadRelease extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /*\n  handleRadio (e) {\n    e.preventDefault();\n    console.log(\"RADIO BUTTON WAS PRESSED\");\n    const target = e.target;\n    this.setState({\n        [target.name]: target.value\n    });\n  };\n  */\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"SUBMIT BUTTON WAS PRESSED\");\n    const form = e.target;\n    const data = new FormData(form);\n\n    for (let name of data.keys()) {\n      const input = form.elements[name];\n      const parserName = input.dataset.parse;\n      console.log('parser name is', parserName);\n\n      if (parserName) {\n        const parsedValue = inputParsers[parserName](data.get(name));\n        data.set(name, parsedValue);\n      }\n    }\n\n    this.setState({\n      res: stringifyFormData(data),\n      invalid: false,\n      displayErrors: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          res = _this$state.res,\n          invalid = _this$state.invalid,\n          displayErrors = _this$state.displayErrors;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Edit Release \",\n      content: /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        className: displayErrors ? 'displayErrors' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-6\"],\n        properties: [{\n          label: \"Partner Name\",\n          type: \"text\",\n          bsClass: \"form-control\",\n          placeholder: \"Partner Name\",\n          defaultValue: \"300 Entertainment\",\n          disabled: true\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-6\"],\n        onChange: this.handleClick,\n        properties: [{\n          label: \"Release Date\",\n          type: \"text\",\n          bsClass: \"form-control\",\n          placeholder: \"Release Date\",\n          defaultValue: \"\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-6\"],\n        properties: [{\n          label: \"Album\",\n          type: \"text\",\n          bsClass: \"form-control\",\n          placeholder: \"Album Name\",\n          defaultValue: \"\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-6\"],\n        properties: [{\n          label: \"Genre\",\n          type: \"text\",\n          bsClass: \"form-control\",\n          placeholder: \"Genre\",\n          defaultValue: \"\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-6\"],\n        properties: [{\n          label: \"UPC\",\n          type: \"text\",\n          bsClass: \"form-control\",\n          placeholder: \"UPC\",\n          defaultValue: \"\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-6\"],\n        properties: [{\n          label: \"Publisher\",\n          type: \"text\",\n          bsClass: \"form-control\",\n          placeholder: \"Publisher\",\n          defaultValue: \"\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 22\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-6\"],\n        properties: [{\n          label: \"Publishing Year\",\n          type: \"text\",\n          bsClass: \"form-control\",\n          placeholder: \"Publishing Year\",\n          defaultValue: \"\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-6\"],\n        properties: [{\n          label: \"Custom ID\",\n          type: \"text\",\n          bsClass: \"form-control\",\n          placeholder: \"Custom ID\",\n          defaultValue: \"\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 20\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        bsStyle: \"info\",\n        pullRight: true,\n        fill: true,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }\n      }, \"Upload Release\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"res-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }, invalid && /*#__PURE__*/React.createElement(ShakingError, {\n      text: \"Form is not valid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }), !invalid && res && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, \"Transformed data to be sent:\"), /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, \"FormData \", res))));\n  }\n\n}\n\nexport default UploadRelease;","map":{"version":3,"sources":["/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/frontend-light-bootstrap-dashboard-react/src/views/UploadRelease.jsx"],"names":["React","Component","Grid","Row","Col","FormGroup","ControlLabel","FormControl","Card","FormInputs","UserCard","Radio","Button","avatar","stringifyFormData","fd","data","key","keys","get","JSON","stringify","ShakingError","constructor","state","componentWillReceiveProps","setState","render","props","text","UploadRelease","handleSubmit","bind","e","preventDefault","console","log","form","target","FormData","name","input","elements","parserName","dataset","parse","parsedValue","inputParsers","set","res","invalid","displayErrors","label","type","bsClass","placeholder","defaultValue","disabled","handleClick"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  FormGroup,\n  ControlLabel,\n  FormControl\n} from \"react-bootstrap\";\n\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from  \"components/CustomRadio/CustomRadio.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport avatar from \"assets/img/faces/face-3.jpg\";\n\n/*\nfetch('https://localhost:8000/uploadLive/', {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    firstParam: 'yourValue',\n    secondParam: 'yourOtherValue'\n  })\n});\n*/\n\n\n\n/*\nconst singleSchema = single.object({\n  partnerName: single.string().required(),\n  releaseDate: single.string().required(),\n  album: single.string().required(),\n  genre: single.string().required(),\n  upc: single.string().required(),\n  publisher: single.string().required(),\n  publishingYear: single.string().required(),\n  customId: single.string().required(),\n})\n*/\n\nfunction stringifyFormData(fd) {\n  const data = {};\n\tfor (let key of fd.keys()) {\n  \tdata[key] = fd.get(key);\n  }\n  return JSON.stringify(data, null, 2);\n}\n\n\n\n\nclass ShakingError extends React.Component {\n\tconstructor() { super(); this.state = { key: 0 }; }\n\n\tcomponentWillReceiveProps() {\n    // update key to remount the component to rerun the animation\n  \tthis.setState({ key: ++this.state.key });\n  }\n\n  render() {\n  \treturn <div key={this.state.key} className=\"bounce\">{this.props.text}</div>;\n  }\n}\n\nclass UploadRelease extends Component {\n\n  constructor() {\n      super();\n      this.state = {};\n      this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n  /*\n  handleRadio (e) {\n    e.preventDefault();\n    console.log(\"RADIO BUTTON WAS PRESSED\");\n    const target = e.target;\n    this.setState({\n        [target.name]: target.value\n    });\n  };\n  */\n  handleSubmit (e) {\n    e.preventDefault();\n    console.log(\"SUBMIT BUTTON WAS PRESSED\");\n\n    const form = e.target;\n    const data = new FormData(form);\n\n    for (let name of data.keys()) {\n      const input = form.elements[name];\n      const parserName = input.dataset.parse;\n      console.log('parser name is', parserName);\n      if (parserName) {\n        const parsedValue = inputParsers[parserName](data.get(name))\n        data.set(name, parsedValue);\n      }\n    }\n\n    this.setState({\n    \tres: stringifyFormData(data),\n      invalid: false,\n      displayErrors: false,\n    });\n\n  }\n\n  render() {\n    const { res, invalid, displayErrors } = this.state;\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col md={8}>\n              <Card\n                title=\"Edit Release \"\n                content={\n                  <form\n                  onSubmit={this.handleSubmit}\n                  noValidate\n                  className={displayErrors ? 'displayErrors' : ''}\n                  >\n                    <FormInputs\n                      ncols={[\"col-md-6\"]}\n                      properties={[\n                        {\n                          label: \"Partner Name\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Partner Name\",\n                          defaultValue: \"300 Entertainment\",\n                          disabled: true\n                        }\n                      ]}\n                    />\n                    <FormInputs\n                      ncols={[\"col-md-6\"]}\n                      onChange={this.handleClick}\n                      properties={[\n                        {\n                          label: \"Release Date\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Release Date\",\n                          defaultValue: \"\"\n                        }\n                      ]}\n                    />\n                    <FormInputs\n                      ncols={[\"col-md-6\"]}\n                      properties={[\n                        {\n                          label: \"Album\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Album Name\",\n                          defaultValue: \"\"\n                        }\n                      ]}\n                    />\n                    <FormInputs\n                      ncols={[\"col-md-6\"]}\n                      properties={[\n                        {\n                          label: \"Genre\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Genre\",\n                          defaultValue: \"\"\n                        }\n                      ]}\n                    />\n                    <FormInputs\n                      ncols={[\"col-md-6\"]}\n                      properties={[\n                        {\n                          label: \"UPC\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"UPC\",\n                          defaultValue: \"\"\n                        }\n                     ]}\n                     />\n                     <FormInputs\n                       ncols={[\"col-md-6\"]}\n                       properties={[\n                        {\n                          label: \"Publisher\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Publisher\",\n                          defaultValue: \"\"\n                        }\n                      ]}\n                    />\n                    <FormInputs\n                      ncols={[\"col-md-6\"]}\n                      properties={[\n                        {\n                          label: \"Publishing Year\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Publishing Year\",\n                          defaultValue: \"\"\n                        }\n                      ]}\n                   />\n                   <FormInputs\n                     ncols={[\"col-md-6\"]}\n                     properties={[\n                        {\n                          label: \"Custom ID\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Custom ID\",\n                          defaultValue: \"\"\n                        }\n                      ]}\n                    />\n                    <Button bsStyle=\"info\" pullRight fill type=\"submit\">\n                      Upload Release\n                    </Button>\n                    <div className=\"clearfix\" />\n                  </form>\n                }\n              />\n            </Col>\n          </Row>\n        </Grid>\n        <div className=\"res-block\">\n          {invalid && (\n            <ShakingError text=\"Form is not valid\" />\n          )}\n          {!invalid && res && (\n          \t<div>\n              <h3>Transformed data to be sent:</h3>\n              <pre>FormData {res}</pre>\n          \t</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default UploadRelease;\n"]},"metadata":{},"sourceType":"module"}
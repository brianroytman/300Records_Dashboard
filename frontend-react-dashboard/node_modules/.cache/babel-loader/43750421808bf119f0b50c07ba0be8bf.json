{"ast":null,"code":"import _objectSpread from \"/Users/brianroytman/Dev/300Records_Dashboard/nodejs-frontend-react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brianroytman/Dev/300Records_Dashboard/nodejs-frontend-react-dashboard/src/views/IngestionTool.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText'; //import Input from '@material-ui/core/Input';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from \"components/CustomRadio/CustomRadio.jsx\"; //import Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\nclass IngestionTool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      MessageDetails: {\n        LanguageAndScriptCode: \"en\",\n        MessageSchemaVersionId: \"ern/382\",\n        Ern: \"http://ddex.net/xml/ern/382\",\n        SchemaLocation: \"http://ddex.net/xml/ern/382 http://ddex.net/xml/ern/382/release-notification.xsd\",\n        MessageHeader: {\n          PartnerName: \"\",\n          ParentalWarningType: \"\",\n          ReleaseType: \"\",\n          ReleaseTitleText: \"\",\n          TitleTextArtistName: \"\",\n          Genre: \"\",\n          Isrc: \"\",\n          MessageCreatedDateTime: Date().toLocaleString(),\n          MessageSender: {\n            PartyName: {\n              FullName: \"THREEHUNDRED\"\n            },\n            PartyId: \"PADPIDA2014082004R\"\n          },\n          MessageControlType: \"LiveMessage\",\n          MessageRecipient: {\n            PartyName: {\n              FullName: \"Youtube\"\n            },\n            PartyId: \"PADPIDA2014082004R\"\n          },\n          MessageId: \"123456QWERTY\"\n        },\n        UpdateIndicator: \"OriginalMessage\",\n        ResourceList: {\n          SoundRecording: {\n            SoundRecordingType: \"MusicalWorkSoundRecording\",\n            SoundRecordingId: {\n              Isrc: \"QMCE32000050\",\n              ProprietaryId: [{\n                Namespace: \"YOUTUBE:AT_CUSTOM_ID\",\n                text: \"THREEHUNDRED-181\"\n              }, {\n                Namespace: \"YOUTUBE:SR_CUSTOM_ID\",\n                text: \"THREEHUNDRED-181\"\n              }, {\n                Namespace: \"DPID:PADPIDA2014040303H\",\n                text: \"THREEHUNDRED\"\n              }]\n            },\n            ResourceReference: \"A1\",\n            ReferenceTitle: {\n              TitleText: \"Ramona Flowers\",\n              LanguageAndScriptCode: \"en\"\n            },\n            Duration: \"\",\n            SoundRecordingDetailsByTerritory: {\n              TerritoryCode: \"\",\n              Title: {\n                TitleText: \"Ramona Flowers\",\n                TitleType: \"DisplayTitle\"\n              },\n              DisplayArtist: {\n                PartyName: {\n                  FullName: \"Haroinfather\"\n                },\n                ArtistRole: \"MainArtist\"\n              },\n              LabelName: \"Crowned LLC 300 Entertainment\",\n              RightsController: {\n                PartyName: {\n                  \"FullName\": \"INDMUSIC\"\n                },\n                PartyId: \"PADPIDA2014040303H\",\n                RightsControllerRole: \"RightsController\",\n                RightSharePercentage: \"100.00\"\n              },\n              PLine: {\n                Year: \"2020\",\n                PLineText: \"Crowned LLC 300 Entertainment\"\n              },\n              Genre: {\n                GenreText: \"Hip Hop\"\n              },\n              ParentalWarningType: \"\",\n              TechnicalSoundRecordingDetails: {\n                TechnicalResourceDetailsReference: \"T1\",\n                File: {\n                  FileName: \"Haroinfather - RAMONA FLOWERS (MAIN)_JL MASTER 2.wav\",\n                  FilePath: \"/\",\n                  HashSum: {\n                    HashSum: \"a01cbacff993beab6769f817cc46786b\",\n                    HashSumAlgorithmType: \"MD5\"\n                  }\n                }\n              }\n            }\n          },\n          Image: {\n            ImageType: \"FrontCoverImage\",\n            ImageId: {\n              ProprietaryId: [{\n                Namespace: \"PADPIDA2014040303H\",\n                text: \"THREEHUNDRED\"\n              }]\n            },\n            ResourceReference: \"A2\",\n            ImageDetailsByTerritory: {\n              TerritoryCode: \"Worldwide\",\n              TechnicalImageDetails: {\n                TechnicalResourceDetailsReference: \"T2\",\n                ImageCodecType: \"JPEG\",\n                ImageHeight: \"2000\",\n                ImageWidth: \"2000\",\n                File: {\n                  FileName: \"haroinfather - ramona flowers ARTWORK v2.jpg\",\n                  FilePath: \"/\",\n                  HashSum: {\n                    HashSum: \"101448ba335e56f53be92d662d6f4b08\",\n                    HashSumAlgorithmType: \"MD5\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        ReleaseList: {\n          Release: [{\n            ReleaseId: {\n              Icpn: \"810043680172\",\n              ProprietaryId: [{\n                Namespace: \"PADPIDA2014040303H\",\n                text: \"THREEHUNDRED\"\n              }]\n            },\n            ReleaseReference: \"R0\"\n          }]\n        }\n      },\n      messageRecipientNameOptions: [\"Youtube\", \"YouTube_ContentID\"],\n      partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n      parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n      releaseTypeOptions: [\"Album\", \"EP\", \"Single\"]\n      /*\n      MessageDetails: {\n        messageId: \"1-a\",\n        messageCreatedDateTime: Date().toLocaleString(),\n        messageControlType: \"\",\n        senderPartyId: \"\",\n        isrc: \"\",\n        titleTextArtistName: \"\",\n        //duration: \"\",\n        fullName: \"\",\n        labelName: \"\",\n        pLineText: \"\",\n        pLineYear: \"2020\",\n        genre: \"\",\n        parentalWarningType: \"\",\n        release: {\n          releaseType: releaseType,\n        },\n        fileNameData: \"\",\n        fileNameImage: \"\",\n        icpn: \"\",\n        propertyIdTitleText: \"\",\n        resourceReleaseType: \"\",\n        resourceReference: \"A1\",\n        territoryCode: \"\",\n        releaseLabelName: \"\",\n        releaseTitleText: \"\",\n        releaseIsrc: \"\",\n        languageTitleText: \"\",\n        languageAndScriptCode: \"en\",\n        displayArtistName: \"\",\n        displayParentalWarningType: \"\",\n        originalReleaseDate: \"\",\n      },\n      partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n      parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n      releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n      territoryCodeOptions: [\"Worldwide\", \"Other\"],\n      */\n\n      /*\n      MessageDetails: {\n        messageId: \"\",\n        messageCreatedDateTime: \"\",\n        titleTextArtistName: \"\",\n        //duration: \"\",\n        fullName: \"\",\n        labelName: \"\",\n        year: \"\",\n        pLineText: \"\",\n        genre: \"\",\n        parentalWarningType: \"\",\n        releaseType: \"\",\n        fileNameData: \"\",\n        fileNameImage: \"\",\n        icpn: \"\",\n        propertyIdTitleText: \"\",\n        resourceReleaseType: \"\",\n        territoryCode: \"\",\n        releaseLabelName: \"\",\n        releaseTitleText: \"\",\n        languageTitleText: \"\",\n        displayArtistName: \"\",\n        displayParentalWarningType: \"\",\n        originalReleaseDate: \"\",\n      },\n      */\n      //partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n      //parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n      //releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n      //territoryCodeOptions: [\"Worldwide\", \"Other\"],\n\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      MessageDetails: _objectSpread({}, prevState.MessageDetails, {\n        originalReleaseDate: value\n      })\n    }), () => console.log(this.state.MessageDetails));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      MessageDetails: _objectSpread({}, prevState.MessageDetails, {\n        [name]: value\n      })\n    }), () => console.log(this.state.MessageDetails));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.MessageDetails;\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.blob();\n    }).then(function (blob) {\n      FileSaver.saveAs(blob, 'xml_output_300.xml');\n    });\n    /*.then(response => {\n     response.json().then(data => {\n       console.log(\"Successful\" + data);\n     });\n    }).catch(error => {\n       alert(error.message);\n    });\n    }\n    */\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      MessageDetails: {\n        PartnerName: \"\",\n        ParentalWarningType: \"\",\n        ReleaseType: \"\",\n        ReleaseTitleText: \"\",\n        TitleTextArtistName: \"\",\n        Genre: \"\",\n        Isrc: \"\",\n        MessageHeader: {\n          MessageCreatedDateTime: Date().toLocaleString()\n        },\n        MessageSender: {\n          PartyName: {\n            FullName: \"THREEHUNDRED\"\n          },\n          PartyId: \"PADPIDA2014082004R\"\n        },\n        MessageControlType: \"LiveMessage\",\n        MessageRecipient: {\n          PartyName: {\n            FullName: \"Youtube\"\n          },\n          PartyId: \"PADPIDA2014082004R\"\n        },\n        MessageId: \"123456QWERTY\"\n      }\n      /*\n        MessageDetails: {\n          messageId: \"1-a\",\n          messageCreatedDateTime: Date().toLocaleString(),\n          messageControlType: \"LiveMessage\",\n          UpdateIndicator: \"OriginalMessage\",\n          senderPartyId: \"PADPIDA2014082004R\",\n          isrc: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          pLineText: \"\",\n          pLineYear: \"\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          releaseType: \"\",\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          resourceReference: \"A1\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseIsrc: \"\",\n          releaseTitleText: \"\",\n          languageTitleText: \"\",\n          languageAndScriptCode: \"\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        }\n        */\n\n      /*\n      MessageDetails: {\n        partnerName: \"\",\n        releaseDate: \"\",\n        songTitle: \"\",\n        artistName: \"\",\n        genre:\"\",\n        isrc: \"\",\n      }\n      */\n\n    });\n  }\n\n  render() {\n    //const []\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"container-fluid\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      title: \"Partner Name\",\n      name: \"partnerName\",\n      options: this.state.partnerOptions,\n      value: this.state.MessageDetails.partnerName,\n      placeholder: \"Select Partner\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Select, {\n      title: \"Parental Warning Type\",\n      name: \"parentalWarningType\",\n      options: this.state.parentalWarningTypeOptions,\n      value: this.state.MessageDetails.parentalWarningType,\n      placeholder: \"Select Parental Warning Type\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Select, {\n      title: \"Release Type\",\n      name: \"releaseType\",\n      options: this.state.releaseTypeOptions,\n      value: this.state.MessageDetails.releaseType,\n      placeholder: \"Select Release Type\",\n      handleChange: this.handleInput //handleChange={setReleaseType(value... )}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Song Title\",\n      name: \"releaseTitleText\",\n      value: this.state.MessageDetails.releaseTitleText,\n      placeholder: \"Enter the song title\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Artist Name\",\n      name: \"titleTextArtistName\",\n      value: this.state.MessageDetails.titleTextArtistName,\n      placeholder: \"Enter the artist name\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Genre\",\n      name: \"genre\",\n      value: this.state.MessageDetails.genre,\n      placeholder: \"Enter the genre\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 13\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"ISRC\",\n      name: \"isrc\",\n      value: this.state.MessageDetails.isrc,\n      placeholder: \"Enter the ISRC code\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 13\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(Button, {\n      action: this.handleFormSubmit,\n      type: \"primary\",\n      title: \"Submit\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleClearForm,\n      type: \"secondary\",\n      title: \"Clear\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }\n    }), \" \");\n  }\n\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default IngestionTool;","map":{"version":3,"sources":["/Users/brianroytman/Dev/300Records_Dashboard/nodejs-frontend-react-dashboard/src/views/IngestionTool.jsx"],"names":["React","Component","Grid","Row","Col","FormGroup","ControlLabel","FormControl","TextField","makeStyles","FilledInput","FormHelperText","InputLabel","OutlinedInput","Card","FormInputs","UserCard","Radio","Select","Button","Input","avatar","saveAs","FileSaver","IngestionTool","constructor","props","state","MessageDetails","LanguageAndScriptCode","MessageSchemaVersionId","Ern","SchemaLocation","MessageHeader","PartnerName","ParentalWarningType","ReleaseType","ReleaseTitleText","TitleTextArtistName","Genre","Isrc","MessageCreatedDateTime","Date","toLocaleString","MessageSender","PartyName","FullName","PartyId","MessageControlType","MessageRecipient","MessageId","UpdateIndicator","ResourceList","SoundRecording","SoundRecordingType","SoundRecordingId","ProprietaryId","Namespace","text","ResourceReference","ReferenceTitle","TitleText","Duration","SoundRecordingDetailsByTerritory","TerritoryCode","Title","TitleType","DisplayArtist","ArtistRole","LabelName","RightsController","RightsControllerRole","RightSharePercentage","PLine","Year","PLineText","GenreText","TechnicalSoundRecordingDetails","TechnicalResourceDetailsReference","File","FileName","FilePath","HashSum","HashSumAlgorithmType","Image","ImageType","ImageId","ImageDetailsByTerritory","TechnicalImageDetails","ImageCodecType","ImageHeight","ImageWidth","ReleaseList","Release","ReleaseId","Icpn","ReleaseReference","messageRecipientNameOptions","partnerOptions","parentalWarningTypeOptions","releaseTypeOptions","handleReleaseDate","bind","handleFormSubmit","handleClearForm","handleInput","e","value","target","setState","prevState","originalReleaseDate","console","log","name","preventDefault","releaseData","fetch","method","body","JSON","stringify","headers","Accept","then","response","blob","render","partnerName","parentalWarningType","releaseType","releaseTitleText","titleTextArtistName","genre","isrc","buttonStyle","margin"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  FormGroup,\n  ControlLabel,\n  FormControl\n} from \"react-bootstrap\";\n\nimport { TextField } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n//import Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from  \"components/CustomRadio/CustomRadio.jsx\";\n//import Button from \"components/CustomButton/CustomButton.jsx\";\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\n\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\nclass IngestionTool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        MessageDetails: {\n          LanguageAndScriptCode: \"en\",\n          MessageSchemaVersionId: \"ern/382\",\n          Ern: \"http://ddex.net/xml/ern/382\",\n          SchemaLocation: \"http://ddex.net/xml/ern/382 http://ddex.net/xml/ern/382/release-notification.xsd\",\n          MessageHeader: {\n            PartnerName: \"\",\n            ParentalWarningType: \"\",\n            ReleaseType: \"\",\n            ReleaseTitleText: \"\",\n            TitleTextArtistName: \"\",\n            Genre: \"\",\n            Isrc: \"\",\n            MessageCreatedDateTime: Date().toLocaleString(),\n            MessageSender: {\n              PartyName: {\n                FullName: \"THREEHUNDRED\",\n              },\n              PartyId: \"PADPIDA2014082004R\",\n            },\n            MessageControlType: \"LiveMessage\",\n            MessageRecipient: {\n              PartyName: {\n                FullName: \"Youtube\",\n              },\n              PartyId: \"PADPIDA2014082004R\",\n            },\n            MessageId: \"123456QWERTY\",\n          },\n          UpdateIndicator: \"OriginalMessage\",\n          ResourceList: {\n              SoundRecording: {\n                SoundRecordingType: \"MusicalWorkSoundRecording\",\n                SoundRecordingId: {\n                   Isrc: \"QMCE32000050\",\n                   ProprietaryId: [\n                      {\n                         Namespace: \"YOUTUBE:AT_CUSTOM_ID\",\n                         text: \"THREEHUNDRED-181\"\n                      },\n                      {\n                         Namespace: \"YOUTUBE:SR_CUSTOM_ID\",\n                         text: \"THREEHUNDRED-181\"\n                      },\n                      {\n                         Namespace: \"DPID:PADPIDA2014040303H\",\n                         text: \"THREEHUNDRED\"\n                      },\n                   ],\n                 },\n                 ResourceReference: \"A1\",\n                 ReferenceTitle: {\n                   TitleText: \"Ramona Flowers\",\n                   LanguageAndScriptCode: \"en\"\n                 },\n                 Duration: \"\",\n                 SoundRecordingDetailsByTerritory: {\n                   TerritoryCode: \"\",\n                   Title: {\n                     TitleText: \"Ramona Flowers\",\n                     TitleType: \"DisplayTitle\",\n                   },\n                   DisplayArtist: {\n                     PartyName: {\n                       FullName: \"Haroinfather\",\n                     },\n                     ArtistRole: \"MainArtist\",\n                   },\n                   LabelName: \"Crowned LLC 300 Entertainment\",\n                   RightsController: {\n                     PartyName: {\n                       \"FullName\": \"INDMUSIC\"\n                     },\n                     PartyId: \"PADPIDA2014040303H\",\n                     RightsControllerRole: \"RightsController\",\n                     RightSharePercentage: \"100.00\"\n                   },\n                   PLine: {\n                     Year: \"2020\",\n                     PLineText: \"Crowned LLC 300 Entertainment\"\n                   },\n                   Genre: {\n                     GenreText: \"Hip Hop\"\n                   },\n                   ParentalWarningType: \"\",\n                   TechnicalSoundRecordingDetails: {\n                     TechnicalResourceDetailsReference: \"T1\",\n                     File:  {\n                       FileName: \"Haroinfather - RAMONA FLOWERS (MAIN)_JL MASTER 2.wav\",\n                       FilePath: \"/\",\n                       HashSum: {\n                         HashSum: \"a01cbacff993beab6769f817cc46786b\",\n                         HashSumAlgorithmType: \"MD5\"\n                       }\n                     }\n                   }\n                 }\n              },\n              Image: {\n                ImageType: \"FrontCoverImage\",\n                ImageId: {\n                  ProprietaryId: [\n                    {\n                      Namespace: \"PADPIDA2014040303H\",\n                      text: \"THREEHUNDRED\"\n                    },\n                  ],\n                },\n                ResourceReference: \"A2\",\n                ImageDetailsByTerritory: {\n                  TerritoryCode: \"Worldwide\",\n                  TechnicalImageDetails: {\n                    TechnicalResourceDetailsReference: \"T2\",\n                    ImageCodecType: \"JPEG\",\n                    ImageHeight: \"2000\",\n                    ImageWidth: \"2000\",\n                    File: {\n                      FileName: \"haroinfather - ramona flowers ARTWORK v2.jpg\",\n                      FilePath: \"/\",\n                      HashSum: {\n                        HashSum: \"101448ba335e56f53be92d662d6f4b08\",\n                        HashSumAlgorithmType: \"MD5\"\n                     }\n                   }\n                  }\n                }\n              }\n            },\n            ReleaseList: {\n              Release: [\n                {\n                  ReleaseId: {\n                    Icpn: \"810043680172\",\n                    ProprietaryId: [\n                      {\n                        Namespace: \"PADPIDA2014040303H\",\n                        text: \"THREEHUNDRED\"\n                      },\n                    ],\n                  },\n                  ReleaseReference: \"R0\",\n                }\n              ]\n            }\n        },\n        messageRecipientNameOptions: [\"Youtube\", \"YouTube_ContentID\"],\n        partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n        parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n        releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n\n        /*\n        MessageDetails: {\n          messageId: \"1-a\",\n          messageCreatedDateTime: Date().toLocaleString(),\n          messageControlType: \"\",\n          senderPartyId: \"\",\n          isrc: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          pLineText: \"\",\n          pLineYear: \"2020\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          release: {\n            releaseType: releaseType,\n          },\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          resourceReference: \"A1\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseTitleText: \"\",\n          releaseIsrc: \"\",\n          languageTitleText: \"\",\n          languageAndScriptCode: \"en\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        },\n        partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n        parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n        releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n        territoryCodeOptions: [\"Worldwide\", \"Other\"],\n        */\n\n        /*\n        MessageDetails: {\n          messageId: \"\",\n          messageCreatedDateTime: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          year: \"\",\n          pLineText: \"\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          releaseType: \"\",\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseTitleText: \"\",\n          languageTitleText: \"\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        },\n        */\n\n        //partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n        //parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n        //releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n        //territoryCodeOptions: [\"Worldwide\", \"Other\"],\n\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        MessageDetails: {\n          ...prevState.MessageDetails,\n          originalReleaseDate: value\n        }\n      }),\n      () => console.log(this.state.MessageDetails)\n    );\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        MessageDetails: {\n          ...prevState.MessageDetails,\n          [name]: value\n        }\n      }),\n      () => console.log(this.state.MessageDetails)\n    );\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.MessageDetails;\n\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function(response) {\n          return response.blob();\n    }).then(function(blob) {\n          FileSaver.saveAs(blob, 'xml_output_300.xml');\n    });\n     /*.then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    }).catch(error => {\n        alert(error.message);\n    });\n  }\n  */\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      MessageDetails: {\n        PartnerName: \"\",\n        ParentalWarningType: \"\",\n        ReleaseType: \"\",\n        ReleaseTitleText: \"\",\n        TitleTextArtistName: \"\",\n        Genre: \"\",\n        Isrc: \"\",\n        MessageHeader: {\n          MessageCreatedDateTime: Date().toLocaleString(),\n        },\n        MessageSender: {\n          PartyName: {\n            FullName: \"THREEHUNDRED\",\n          },\n          PartyId: \"PADPIDA2014082004R\",\n        },\n        MessageControlType: \"LiveMessage\",\n        MessageRecipient: {\n          PartyName: {\n            FullName: \"Youtube\",\n          },\n          PartyId: \"PADPIDA2014082004R\",\n        },\n        MessageId: \"123456QWERTY\",\n      }\n\n      /*\n        MessageDetails: {\n          messageId: \"1-a\",\n          messageCreatedDateTime: Date().toLocaleString(),\n          messageControlType: \"LiveMessage\",\n          UpdateIndicator: \"OriginalMessage\",\n          senderPartyId: \"PADPIDA2014082004R\",\n          isrc: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          pLineText: \"\",\n          pLineYear: \"\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          releaseType: \"\",\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          resourceReference: \"A1\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseIsrc: \"\",\n          releaseTitleText: \"\",\n          languageTitleText: \"\",\n          languageAndScriptCode: \"\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        }\n        */\n        /*\n        MessageDetails: {\n          partnerName: \"\",\n          releaseDate: \"\",\n          songTitle: \"\",\n          artistName: \"\",\n          genre:\"\",\n          isrc: \"\",\n        }\n        */\n    });\n  }\n\n  render() {\n    //const []\n\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n        <Select\n          title={\"Partner Name\"}\n          name={\"partnerName\"}\n          options={this.state.partnerOptions}\n          value={this.state.MessageDetails.partnerName}\n          placeholder={\"Select Partner\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        <Select\n          title={\"Parental Warning Type\"}\n          name={\"parentalWarningType\"}\n          options={this.state.parentalWarningTypeOptions}\n          value={this.state.MessageDetails.parentalWarningType}\n          placeholder={\"Select Parental Warning Type\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        <Select\n          title={\"Release Type\"}\n          name={\"releaseType\"}\n          options={this.state.releaseTypeOptions}\n          value={this.state.MessageDetails.releaseType}\n          placeholder={\"Select Release Type\"}\n          handleChange={this.handleInput}\n          //handleChange={setReleaseType(value... )}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        <Row>\n          <Col xs=\"6\">\n            <Input\n              inputType={\"text\"}\n              title={\"Song Title\"}\n              name={\"releaseTitleText\"}\n              value={this.state.MessageDetails.releaseTitleText}\n              placeholder={\"Enter the song title\"}\n              handleChange={this.handleInput}\n            />{\" \"}\n            {/* Name of the song */}\n          </Col>\n        <Col xs=\"6\">\n          <Input\n            inputType={\"text\"}\n            title={\"Artist Name\"}\n            name={\"titleTextArtistName\"}\n            value={this.state.MessageDetails.titleTextArtistName}\n            placeholder={\"Enter the artist name\"}\n            handleChange={this.handleInput}\n          />{\" \"}\n          {/* Name of the artist */}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"6\">\n            <Input\n              inputType={\"text\"}\n              title={\"Genre\"}\n              name={\"genre\"}\n              value={this.state.MessageDetails.genre}\n              placeholder={\"Enter the genre\"}\n              handleChange={this.handleInput}\n            />{\" \"}\n            {/* Name of the genre */}\n          </Col>\n          <Col xs=\"6\">\n            <Input\n              inputType={\"text\"}\n              title={\"ISRC\"}\n              name={\"isrc\"}\n              value={this.state.MessageDetails.isrc}\n              placeholder={\"Enter the ISRC code\"}\n              handleChange={this.handleInput}\n            />{\" \"}\n            {/* ISRC code for the song */}\n          </Col>\n        </Row>\n        <Button\n          action={this.handleFormSubmit}\n          type={\"primary\"}\n          title={\"Submit\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/*Submit */}\n        <Button\n          action={this.handleClearForm}\n          type={\"secondary\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/* Clear the form */}\n      </form>\n    );\n  }\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nexport default IngestionTool;\n"]},"metadata":{},"sourceType":"module"}
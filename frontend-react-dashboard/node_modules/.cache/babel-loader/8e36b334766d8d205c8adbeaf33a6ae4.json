{"ast":null,"code":"import _objectSpread from \"/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/go-app/frontend-light-bootstrap-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/go-app/frontend-light-bootstrap-dashboard-react/src/views/ClaimsTool.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText'; //import Input from '@material-ui/core/Input';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from \"components/CustomRadio/CustomRadio.jsx\"; //import Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\nclass ClaimsTool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ClaimDetails: {\n        claimLength: \"\",\n        artistName: \"\",\n        songTitle: \"\",\n        claimUrl: \"\",\n        emailThread: \"\"\n      },\n      claimLengthOptions: [\"30 Days\"]\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      ClaimDetails: _objectSpread({}, prevState.ClaimDetails, {\n        releaseDate: value\n      })\n    }), () => console.log(this.state.ClaimDetailsDetails));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      ClaimDetails: _objectSpread({}, prevState.ClaimDetails, {\n        [name]: value\n      })\n    }), () => console.log(this.state.ClaimDetails));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.ClaimDetails; //create API endpoint \"claimLive\" on the Go side to POST to\n\n    fetch(\"/claimLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.blob();\n    }).then(function (blob) {\n      FileSaver.saveAs(blob, 'claim_details_300.xml');\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      ClaimDetails: {\n        claimLength: \"\",\n        artistName: \"\",\n        songTitle: \"\",\n        claimUrl: \"\",\n        emailThread: \"\"\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"container-fluid\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      title: \"Claim Length (Days)\",\n      name: \"claimLength\",\n      options: this.state.claimLengthOptions,\n      value: this.state.ClaimDetails.claimLength,\n      placeholder: \"Select Claim Length\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Artist Name\",\n      name: \"artistName\",\n      value: this.state.ClaimDetails.artistName,\n      placeholder: \"Enter the artist name\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Song Title\",\n      name: \"songTitle\",\n      value: this.state.ClaimDetails.songTitle,\n      placeholder: \"Enter the song title\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Claim URL\",\n      name: \"claimUrl\",\n      value: this.state.ClaimDetails.claimUrl,\n      placeholder: \"Enter the claim URL\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Email Thread\",\n      name: \"emailThread\",\n      value: this.state.ClaimDetails.emailThread,\n      placeholder: \"Enter the email thread\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleFormSubmit,\n      type: \"primary\",\n      title: \"Submit\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleClearForm,\n      type: \"secondary\",\n      title: \"Clear\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }), \" \");\n  }\n\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default ClaimsTool;","map":{"version":3,"sources":["/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/go-app/frontend-light-bootstrap-dashboard-react/src/views/ClaimsTool.jsx"],"names":["React","Component","Grid","Row","Col","FormGroup","ControlLabel","FormControl","TextField","makeStyles","FilledInput","FormHelperText","InputLabel","OutlinedInput","Card","FormInputs","UserCard","Radio","Select","Button","Input","avatar","saveAs","FileSaver","ClaimsTool","constructor","props","state","ClaimDetails","claimLength","artistName","songTitle","claimUrl","emailThread","claimLengthOptions","handleReleaseDate","bind","handleFormSubmit","handleClearForm","handleInput","e","value","target","setState","prevState","releaseDate","console","log","ClaimDetailsDetails","name","preventDefault","releaseData","fetch","method","body","JSON","stringify","headers","Accept","then","response","blob","render","buttonStyle","margin"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  FormGroup,\n  ControlLabel,\n  FormControl\n} from \"react-bootstrap\";\n\nimport { TextField } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n//import Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from  \"components/CustomRadio/CustomRadio.jsx\";\n//import Button from \"components/CustomButton/CustomButton.jsx\";\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\n\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\n\nclass ClaimsTool extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        ClaimDetails: {\n          claimLength: \"\",\n          artistName: \"\",\n          songTitle: \"\",\n          claimUrl: \"\",\n          emailThread: \"\"\n        },\n        claimLengthOptions: [\"30 Days\"],\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        ClaimDetails: {\n          ...prevState.ClaimDetails,\n          releaseDate: value\n        }\n      }),\n      () => console.log(this.state.ClaimDetailsDetails)\n    );\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        ClaimDetails: {\n          ...prevState.ClaimDetails,\n          [name]: value\n        }\n      }),\n      () => console.log(this.state.ClaimDetails)\n    );\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.ClaimDetails;\n\n    //create API endpoint \"claimLive\" on the Go side to POST to\n    fetch(\"/claimLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function(response) {\n          return response.blob();\n    }).then(function(blob) {\n          FileSaver.saveAs(blob, 'claim_details_300.xml');\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n        ClaimDetails: {\n          claimLength: \"\",\n          artistName: \"\",\n          songTitle: \"\",\n          claimUrl: \"\",\n          emailThread: \"\"\n        }\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n        <Select\n          title={\"Claim Length (Days)\"}\n          name={\"claimLength\"}\n          options={this.state.claimLengthOptions}\n          value={this.state.ClaimDetails.claimLength}\n          placeholder={\"Select Claim Length\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* # of days for the claim */}\n        <Input\n          inputType={\"text\"}\n          title={\"Artist Name\"}\n          name={\"artistName\"}\n          value={this.state.ClaimDetails.artistName}\n          placeholder={\"Enter the artist name\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the artist */}\n        <Input\n          inputType={\"text\"}\n          title={\"Song Title\"}\n          name={\"songTitle\"}\n          value={this.state.ClaimDetails.songTitle}\n          placeholder={\"Enter the song title\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the song */}\n        <Input\n          inputType={\"text\"}\n          title={\"Claim URL\"}\n          name={\"claimUrl\"}\n          value={this.state.ClaimDetails.claimUrl}\n          placeholder={\"Enter the claim URL\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Url to send the claim */}\n        <Input\n          inputType={\"text\"}\n          title={\"Email Thread\"}\n          name={\"emailThread\"}\n          value={this.state.ClaimDetails.emailThread}\n          placeholder={\"Enter the email thread\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Email thread to send the notification of claim */}\n        <Button\n          action={this.handleFormSubmit}\n          type={\"primary\"}\n          title={\"Submit\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/*Submit */}\n        <Button\n          action={this.handleClearForm}\n          type={\"secondary\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/* Clear the form */}\n      </form>\n    );\n  }\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nexport default ClaimsTool;\n"]},"metadata":{},"sourceType":"module"}
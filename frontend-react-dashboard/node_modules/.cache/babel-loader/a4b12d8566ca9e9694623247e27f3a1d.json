{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/shaders/ui.scheduler.current_time_shader.vertical.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _uiScheduler = require(\"../shaders/ui.scheduler.current_time_shader\");\n\nvar _uiScheduler2 = _interopRequireDefault(_uiScheduler);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (\"undefined\" !== typeof Reflect && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) {\n        return;\n      }\n\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n\n    if (null === object) {\n      break;\n    }\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar DATE_TIME_SHADER_ALL_DAY_CLASS = \"dx-scheduler-date-time-shader-all-day\";\nvar DATE_TIME_SHADER_TOP_CLASS = \"dx-scheduler-date-time-shader-top\";\nvar DATE_TIME_SHADER_BOTTOM_CLASS = \"dx-scheduler-date-time-shader-bottom\";\n\nvar VerticalCurrentTimeShader = function (_CurrentTimeShader) {\n  _inherits(VerticalCurrentTimeShader, _CurrentTimeShader);\n\n  var _super = _createSuper(VerticalCurrentTimeShader);\n\n  function VerticalCurrentTimeShader() {\n    _classCallCheck(this, VerticalCurrentTimeShader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VerticalCurrentTimeShader, [{\n    key: \"renderShader\",\n    value: function value() {\n      var shaderHeight = this._getShaderHeight();\n\n      var maxHeight = this._getShaderMaxHeight();\n\n      var isSolidShader = shaderHeight > maxHeight;\n\n      if (shaderHeight >= 0) {\n        if (shaderHeight > maxHeight) {\n          shaderHeight = maxHeight;\n        }\n\n        this._$shader.height(shaderHeight);\n\n        var groupCount = this._workSpace._getGroupCount() || 1;\n\n        if (this._workSpace.isGroupedByDate()) {\n          this._renderGroupedByDateShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader);\n        } else {\n          this._renderShaderParts(groupCount, shaderHeight, maxHeight, isSolidShader);\n        }\n      }\n    }\n  }, {\n    key: \"_renderShaderParts\",\n    value: function value(groupCount, shaderHeight, maxHeight, isSolidShader) {\n      for (var i = 0; i < groupCount; i++) {\n        var shaderWidth = this._getShaderWidth(i);\n\n        this._renderTopShader(this._$shader, shaderHeight, shaderWidth, i);\n\n        !isSolidShader && this._renderBottomShader(this._$shader, maxHeight - shaderHeight, shaderWidth, i);\n\n        this._renderAllDayShader(shaderWidth, i);\n      }\n    }\n  }, {\n    key: \"_renderGroupedByDateShaderParts\",\n    value: function value(groupCount, shaderHeight, maxHeight, isSolidShader) {\n      var shaderWidth = this._getShaderWidth(0);\n\n      var bottomShaderWidth = (shaderWidth - this._workSpace.getCellWidth()) * groupCount + this._workSpace.getCellWidth();\n\n      this._renderTopShader(this._$shader, shaderHeight, shaderWidth * groupCount, 0);\n\n      !isSolidShader && this._renderBottomShader(this._$shader, maxHeight - shaderHeight, bottomShaderWidth, 0);\n\n      this._renderAllDayShader(shaderWidth * groupCount, 0);\n    }\n  }, {\n    key: \"_renderTopShader\",\n    value: function value($shader, height, width, i) {\n      this._$topShader = (0, _renderer2.default)(\"<div>\").addClass(DATE_TIME_SHADER_TOP_CLASS);\n      width && this._$topShader.width(width) && this._$topShader.height(height);\n\n      this._$topShader.css(\"marginTop\", this._getShaderTopOffset(i));\n\n      this._$topShader.css(\"left\", this._getShaderOffset(i, width));\n\n      $shader.append(this._$topShader);\n    }\n  }, {\n    key: \"_renderBottomShader\",\n    value: function value($shader, height, width, i) {\n      this._$bottomShader = (0, _renderer2.default)(\"<div>\").addClass(DATE_TIME_SHADER_BOTTOM_CLASS);\n      this._$bottomShader.width(width - this._workSpace.getCellWidth()) && this._$bottomShader.height(height);\n\n      this._$bottomShader.css(\"left\", this._getShaderOffset(i, width - this._workSpace.getCellWidth()));\n\n      $shader.append(this._$bottomShader);\n    }\n  }, {\n    key: \"_renderAllDayShader\",\n    value: function value(shaderWidth, i) {\n      if (this._workSpace.option(\"showAllDayPanel\")) {\n        this._$allDayIndicator = (0, _renderer2.default)(\"<div>\").addClass(DATE_TIME_SHADER_ALL_DAY_CLASS);\n\n        this._$allDayIndicator.height(this._workSpace.getAllDayHeight());\n\n        this._$allDayIndicator.width(shaderWidth);\n\n        this._$allDayIndicator.css(\"left\", this._getShaderOffset(i, shaderWidth));\n\n        this._workSpace._$allDayPanel.prepend(this._$allDayIndicator);\n      }\n    }\n  }, {\n    key: \"_getShaderOffset\",\n    value: function value(i, width) {\n      return this._workSpace.getGroupedStrategy().getShaderOffset(i, width);\n    }\n  }, {\n    key: \"_getShaderTopOffset\",\n    value: function value(i) {\n      return this._workSpace.getGroupedStrategy().getShaderTopOffset(i);\n    }\n  }, {\n    key: \"_getShaderHeight\",\n    value: function value(i, width) {\n      return this._workSpace.getGroupedStrategy().getShaderHeight();\n    }\n  }, {\n    key: \"_getShaderMaxHeight\",\n    value: function value(i, width) {\n      return this._workSpace.getGroupedStrategy().getShaderMaxHeight();\n    }\n  }, {\n    key: \"_getShaderWidth\",\n    value: function value(i) {\n      return this._workSpace.getGroupedStrategy().getShaderWidth(i);\n    }\n  }, {\n    key: \"clean\",\n    value: function value() {\n      _get(_getPrototypeOf(VerticalCurrentTimeShader.prototype), \"clean\", this).call(this);\n\n      this._workSpace && this._workSpace._$allDayPanel && this._workSpace._$allDayPanel.find(\".\" + DATE_TIME_SHADER_ALL_DAY_CLASS).remove();\n    }\n  }]);\n\n  return VerticalCurrentTimeShader;\n}(_uiScheduler2.default);\n\nmodule.exports = VerticalCurrentTimeShader;","map":null,"metadata":{},"sourceType":"script"}
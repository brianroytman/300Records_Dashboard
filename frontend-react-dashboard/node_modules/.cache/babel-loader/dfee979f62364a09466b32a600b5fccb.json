{"ast":null,"code":"import _objectSpread from \"/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/frontend-light-bootstrap-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/frontend-light-bootstrap-dashboard-react/src/views/UploadRelease.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText'; //import Input from '@material-ui/core/Input';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from \"components/CustomRadio/CustomRadio.jsx\"; //import Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\nimport avatar from \"assets/img/faces/face-3.jpg\";\n/*\nfunction stringifyFormData(fd) {\n  const data = {};\n\tfor (let key of fd.keys()) {\n  \tdata[key] = fd.get(key);\n  }\n  return JSON.stringify(data, null, 2);\n}\n*/\n\nclass UploadRelease extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      NewReleaseMessage: {\n        partnerName: \"\",\n        releaseDate: \"\",\n        songTitle: \"\",\n        genre: \"\" //skills: [],\n        //about: \"\"\n\n      },\n      partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"] //skillOptions: [\"Programming\", \"Development\", \"Design\", \"Testing\"]\n\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      NewReleaseMessage: _objectSpread({}, prevState.NewReleaseMessage, {\n        releaseYear: value\n      })\n    }), () => console.log(this.state.NewReleaseMessage));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      NewReleaseMessage: _objectSpread({}, prevState.NewReleaseMessage, {\n        [name]: value\n      })\n    }), () => console.log(this.state.NewReleaseMessage));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.NewReleaseMessage;\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    /*.then(response => {\n     response.json().then(data => {\n       console.log(\"Successful\" + data);\n     });\n    }).catch(error => {\n       alert(error.message);\n    });\n    }\n    */\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      NewReleaseMessage: {\n        partnerName: \"\",\n        releaseDate: \"\",\n        songTitle: \"\",\n        genre: \"\"\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"container-fluid\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      title: \"Partner Name\",\n      name: \"partnerName\",\n      options: this.state.partnerOptions,\n      value: this.state.NewReleaseMessage.partnerName,\n      placeholder: \"Select Partner\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"number\",\n      name: \"releaseYear\",\n      title: \"Release Year\",\n      value: this.state.NewReleaseMessage.releaseDate,\n      placeholder: \"Enter the release year\",\n      handleChange: this.handleReleasedate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Song Title\",\n      name: \"songTitle\",\n      value: this.state.NewReleaseMessage.songTitle,\n      placeholder: \"Enter the song title\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Genre\",\n      name: \"genre\",\n      value: this.state.NewReleaseMessage.genre,\n      placeholder: \"Enter the genre\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleFormSubmit,\n      type: \"primary\",\n      title: \"Submit\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleClearForm,\n      type: \"secondary\",\n      title: \"Clear\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }), \" \");\n  }\n\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default UploadRelease;","map":{"version":3,"sources":["/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/frontend-light-bootstrap-dashboard-react/src/views/UploadRelease.jsx"],"names":["React","Component","Grid","Row","Col","FormGroup","ControlLabel","FormControl","TextField","makeStyles","FilledInput","FormHelperText","InputLabel","OutlinedInput","Card","FormInputs","UserCard","Radio","Select","Button","Input","avatar","UploadRelease","constructor","props","state","NewReleaseMessage","partnerName","releaseDate","songTitle","genre","partnerOptions","handleReleaseDate","bind","handleFormSubmit","handleClearForm","handleInput","e","value","target","setState","prevState","releaseYear","console","log","name","preventDefault","releaseData","fetch","method","body","JSON","stringify","headers","Accept","render","handleReleasedate","buttonStyle","margin"],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,SAJF,EAKEC,YALF,EAMEC,WANF,QAOO,iBAPP;AASA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,UAAT,QAA2B,sCAA3B;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,OAAOC,KAAP,MAAmB,wCAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA;;;;;;;;;;AAUA,MAAMC,aAAN,SAA4BrB,SAA5B,CAAsC;AACpCsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,WAAW,EAAE,EADI;AAEjBC,QAAAA,WAAW,EAAE,EAFI;AAGjBC,QAAAA,SAAS,EAAE,EAHM;AAIjBC,QAAAA,KAAK,EAAC,EAJW,CAKjB;AACA;;AANiB,OADR;AAUXC,MAAAA,cAAc,EAAE,CAAC,mBAAD,EAAsB,gBAAtB,CAVL,CAWX;;AAXW,KAAb;AAaA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,iBAAiB,CAACK,CAAD,EAAI;AACnB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,SAAKE,QAAL,CACEC,SAAS,KAAK;AACZf,MAAAA,iBAAiB,oBACZe,SAAS,CAACf,iBADE;AAEfgB,QAAAA,WAAW,EAAEJ;AAFE;AADL,KAAL,CADX,EAOE,MAAMK,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,iBAAvB,CAPR;AASD;;AAEDU,EAAAA,WAAW,CAACC,CAAD,EAAI;AACb,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,QAAIO,IAAI,GAAGR,CAAC,CAACE,MAAF,CAASM,IAApB;AACA,SAAKL,QAAL,CACEC,SAAS,KAAK;AACZf,MAAAA,iBAAiB,oBACZe,SAAS,CAACf,iBADE;AAEf,SAACmB,IAAD,GAAQP;AAFO;AADL,KAAL,CADX,EAOE,MAAMK,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,iBAAvB,CAPR;AASD;;AAEDQ,EAAAA,gBAAgB,CAACG,CAAD,EAAI;AAClBA,IAAAA,CAAC,CAACS,cAAF;AACA,QAAIC,WAAW,GAAG,KAAKtB,KAAL,CAAWC,iBAA7B;AAEAsB,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnB;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAHa;AAInBM,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAJU,KAAhB,CAAL;AASC;;;;;;;;;AASF;;AACDnB,EAAAA,eAAe,CAACE,CAAD,EAAI;AACjBA,IAAAA,CAAC,CAACS,cAAF;AACA,SAAKN,QAAL,CAAc;AACZd,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,WAAW,EAAE,EADI;AAEjBC,QAAAA,WAAW,EAAE,EAFI;AAGjBC,QAAAA,SAAS,EAAE,EAHM;AAIjBC,QAAAA,KAAK,EAAC;AAJW;AADP,KAAd;AAQD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,QAAQ,EAAE,KAAKrB,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,cADT;AAEE,MAAA,IAAI,EAAE,aAFR;AAGE,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWM,cAHtB;AAIE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,iBAAX,CAA6BC,WAJtC;AAKE,MAAA,WAAW,EAAE,gBALf;AAME,MAAA,YAAY,EAAE,KAAKS,WANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQK,GARL,eASE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAE,QADb;AAEE,MAAA,IAAI,EAAE,aAFR;AAGE,MAAA,KAAK,EAAE,cAHT;AAIE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,iBAAX,CAA6BE,WAJtC;AAKE,MAAA,WAAW,EAAE,wBALf;AAME,MAAA,YAAY,EAAE,KAAK4B,iBANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAgBK,GAhBL,eAkBE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAE,MADb;AAEE,MAAA,KAAK,EAAE,YAFT;AAGE,MAAA,IAAI,EAAE,WAHR;AAIE,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWC,iBAAX,CAA6BG,SAJtC;AAKE,MAAA,WAAW,EAAE,sBALf;AAME,MAAA,YAAY,EAAE,KAAKO,WANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAyBK,GAzBL,eA2BE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAE,MADb;AAEE,MAAA,KAAK,EAAE,OAFT;AAGE,MAAA,IAAI,EAAE,OAHR;AAIE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,iBAAX,CAA6BI,KAJtC;AAKE,MAAA,WAAW,EAAE,iBALf;AAME,MAAA,YAAY,EAAE,KAAKM,WANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EAkCK,GAlCL,eAoCE,oBAAC,MAAD;AACE,MAAA,MAAM,EAAE,KAAKF,gBADf;AAEE,MAAA,IAAI,EAAE,SAFR;AAGE,MAAA,KAAK,EAAE,QAHT;AAIE,MAAA,KAAK,EAAEuB,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,EAyCK,GAzCL,eA2CE,oBAAC,MAAD;AACE,MAAA,MAAM,EAAE,KAAKtB,eADf;AAEE,MAAA,IAAI,EAAE,WAFR;AAGE,MAAA,KAAK,EAAE,OAHT;AAIE,MAAA,KAAK,EAAEsB,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EAgDK,GAhDL,CADF;AAqDD;;AA3ImC;;AA8ItC,MAAMA,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE;AADU,CAApB;AAIA,eAAepC,aAAf","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  FormGroup,\n  ControlLabel,\n  FormControl\n} from \"react-bootstrap\";\n\nimport { TextField } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n//import Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from  \"components/CustomRadio/CustomRadio.jsx\";\n//import Button from \"components/CustomButton/CustomButton.jsx\";\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\n\nimport avatar from \"assets/img/faces/face-3.jpg\";\n\n/*\nfunction stringifyFormData(fd) {\n  const data = {};\n\tfor (let key of fd.keys()) {\n  \tdata[key] = fd.get(key);\n  }\n  return JSON.stringify(data, null, 2);\n}\n*/\n\nclass UploadRelease extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      NewReleaseMessage: {\n        partnerName: \"\",\n        releaseDate: \"\",\n        songTitle: \"\",\n        genre:\"\"\n        //skills: [],\n        //about: \"\"\n      },\n\n      partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n      //skillOptions: [\"Programming\", \"Development\", \"Design\", \"Testing\"]\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        NewReleaseMessage: {\n          ...prevState.NewReleaseMessage,\n          releaseYear: value\n        }\n      }),\n      () => console.log(this.state.NewReleaseMessage)\n    );\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        NewReleaseMessage: {\n          ...prevState.NewReleaseMessage,\n          [name]: value\n        }\n      }),\n      () => console.log(this.state.NewReleaseMessage)\n    );\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.NewReleaseMessage;\n\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n     /*.then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    }).catch(error => {\n        alert(error.message);\n    });\n  }\n  */\n  }\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      NewReleaseMessage: {\n        partnerName: \"\",\n        releaseDate: \"\",\n        songTitle: \"\",\n        genre:\"\"\n      }\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n        <Select\n          title={\"Partner Name\"}\n          name={\"partnerName\"}\n          options={this.state.partnerOptions}\n          value={this.state.NewReleaseMessage.partnerName}\n          placeholder={\"Select Partner\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        <Input\n          inputType={\"number\"}\n          name={\"releaseYear\"}\n          title={\"Release Year\"}\n          value={this.state.NewReleaseMessage.releaseDate}\n          placeholder={\"Enter the release year\"}\n          handleChange={this.handleReleasedate}\n        />{\" \"}\n        {/* Release Date */}\n        <Input\n          inputType={\"text\"}\n          title={\"Song Title\"}\n          name={\"songTitle\"}\n          value={this.state.NewReleaseMessage.songTitle}\n          placeholder={\"Enter the song title\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the song */}\n        <Input\n          inputType={\"text\"}\n          title={\"Genre\"}\n          name={\"genre\"}\n          value={this.state.NewReleaseMessage.genre}\n          placeholder={\"Enter the genre\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the song */}\n        <Button\n          action={this.handleFormSubmit}\n          type={\"primary\"}\n          title={\"Submit\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/*Submit */}\n        <Button\n          action={this.handleClearForm}\n          type={\"secondary\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/* Clear the form */}\n      </form>\n    );\n  }\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nexport default UploadRelease;\n"]},"metadata":{},"sourceType":"module"}
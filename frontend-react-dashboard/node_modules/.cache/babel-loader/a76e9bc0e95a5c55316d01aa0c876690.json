{"ast":null,"code":"var _jsxFileName = \"/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/go-app/frontend-light-bootstrap-dashboard-react/src/views/Dashboard.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport { dataPie, legendPie, dataSales, optionsSales, responsiveSales, legendSales, dataBar, optionsBar, responsiveBar, legendBar } from \"variables/Variables.jsx\";\nimport Scheduler from 'devextreme-react/scheduler';\nimport CustomStore from 'devextreme/data/custom_store';\n\nfunction getData(_, requestOptions) {\n  const PUBLIC_KEY = 'd3b90a31c8f45216f3cb2779fba432bf8fa78423',\n        CALENDAR_ID = 'brian.roytman@gmail.com';\n  const dataUrl = ['https://www.googleapis.com/calendar/v3/calendars/', CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n  return fetch(dataUrl, requestOptions).then(response => response.json()).then(data => data.items);\n}\n\nconst dataSource = new CustomStore({\n  load: options => getData(options, {\n    showDeleted: false\n  })\n});\nconst currentDate = new Date(2017, 4, 25);\nconst views = ['day', 'workWeek', 'month'];\n\nclass Dashboard extends Component {\n  createLegend(json) {\n    var legend = [];\n\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push( /*#__PURE__*/React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }));\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n\n    return legend;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"long-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Tasks for Employees (USA Office)\")), /*#__PURE__*/React.createElement(Scheduler, {\n      dataSource: dataSource,\n      views: views,\n      defaultCurrentView: \"workWeek\",\n      defaultCurrentDate: currentDate,\n      height: 500,\n      startDayHour: 7,\n      editing: false,\n      showAllDayPanel: false,\n      startDateExpr: \"start.dateTime\",\n      endDateExpr: \"end.dateTime\",\n      textExpr: \"summary\",\n      timeZone: \"America/Los_Angeles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/brianroytman/Dev/Youtube_300Entertainment_Dashboard/go-app/frontend-light-bootstrap-dashboard-react/src/views/Dashboard.jsx"],"names":["React","Component","ChartistGraph","Grid","Row","Col","Card","StatsCard","Tasks","dataPie","legendPie","dataSales","optionsSales","responsiveSales","legendSales","dataBar","optionsBar","responsiveBar","legendBar","Scheduler","CustomStore","getData","_","requestOptions","PUBLIC_KEY","CALENDAR_ID","dataUrl","join","fetch","then","response","json","data","items","dataSource","load","options","showDeleted","currentDate","Date","views","Dashboard","createLegend","legend","i","length","type","push","render"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\nimport { Card } from \"components/Card/Card.jsx\";\nimport { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport {\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar\n} from \"variables/Variables.jsx\";\n\nimport Scheduler from 'devextreme-react/scheduler';\nimport CustomStore from 'devextreme/data/custom_store';\n\nfunction getData(_, requestOptions) {\n  const PUBLIC_KEY = 'd3b90a31c8f45216f3cb2779fba432bf8fa78423',\n    CALENDAR_ID = 'brian.roytman@gmail.com';\n  const dataUrl = [ 'https://www.googleapis.com/calendar/v3/calendars/',\n    CALENDAR_ID, '/events?key=', PUBLIC_KEY].join('');\n\n  return fetch(dataUrl, requestOptions).then(\n    (response) => response.json()\n  ).then((data) => data.items);\n}\n\nconst dataSource = new CustomStore({\n  load: (options) => getData(options, { showDeleted: false })\n});\n\nconst currentDate = new Date(2017, 4, 25);\nconst views = ['day', 'workWeek', 'month'];\n\nclass Dashboard extends Component {\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"long-title\">\n          <h3>Tasks for Employees (USA Office)</h3>\n        </div>\n        <Scheduler\n          dataSource={dataSource}\n          views={views}\n          defaultCurrentView=\"workWeek\"\n          defaultCurrentDate={currentDate}\n          height={500}\n          startDayHour={7}\n          editing={false}\n          showAllDayPanel={false}\n          startDateExpr=\"start.dateTime\"\n          endDateExpr=\"end.dateTime\"\n          textExpr=\"summary\"\n          timeZone=\"America/Los_Angeles\"/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}
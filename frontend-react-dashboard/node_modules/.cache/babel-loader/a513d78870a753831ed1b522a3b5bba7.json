{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/shaders/ui.scheduler.current_time_shader.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _position = require(\"../../../core/utils/position\");\n\nvar _renderer = require(\"../../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar DATE_TIME_SHADER_CLASS = \"dx-scheduler-date-time-shader\";\n\nvar CurrentTimeShader = function () {\n  function CurrentTimeShader(workSpace) {\n    _classCallCheck(this, CurrentTimeShader);\n\n    this._workSpace = workSpace;\n    this._$container = this._workSpace._dateTableScrollable.$content();\n  }\n\n  _createClass(CurrentTimeShader, [{\n    key: \"render\",\n    value: function value() {\n      var _this = this;\n\n      this.initShaderElements();\n      this.renderShader();\n      this.applyShaderMargin(this._$shader);\n\n      this._shader.forEach(function (shader, index) {\n        _this._$container.append(shader);\n      });\n    }\n  }, {\n    key: \"initShaderElements\",\n    value: function value() {\n      this._$shader = this.createShader();\n      this._shader = [];\n\n      this._shader.push(this._$shader);\n    }\n  }, {\n    key: \"renderShader\",\n    value: function value() {}\n  }, {\n    key: \"applyShaderMargin\",\n    value: function value($shader) {\n      if ($shader && this._workSpace.option(\"crossScrollingEnabled\")) {\n        $shader.css(\"marginTop\", -(0, _position.getBoundingRect)(this._$container.get(0)).height);\n        $shader.css(\"height\", (0, _position.getBoundingRect)(this._$container.get(0)).height);\n      }\n    }\n  }, {\n    key: \"createShader\",\n    value: function value() {\n      return (0, _renderer2.default)(\"<div>\").addClass(DATE_TIME_SHADER_CLASS);\n    }\n  }, {\n    key: \"clean\",\n    value: function value() {\n      this._$container && this._$container.find(\".\" + DATE_TIME_SHADER_CLASS).remove();\n    }\n  }]);\n\n  return CurrentTimeShader;\n}();\n\nmodule.exports = CurrentTimeShader;","map":null,"metadata":{},"sourceType":"script"}
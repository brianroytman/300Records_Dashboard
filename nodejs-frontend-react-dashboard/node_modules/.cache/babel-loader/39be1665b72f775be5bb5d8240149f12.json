{"ast":null,"code":"import _objectSpread from \"/Users/brianroytman/Dev/300Records_Dashboard/nodejs-frontend-react-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brianroytman/Dev/300Records_Dashboard/nodejs-frontend-react-dashboard/src/views/IngestionTool.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText'; //import Input from '@material-ui/core/Input';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from \"components/CustomRadio/CustomRadio.jsx\"; //import Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\nclass IngestionTool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      MessageDetails: {\n        messageId: \"1-a\",\n        messageCreatedDateTime: Date().toLocaleString(),\n        isrc: \"\",\n        titleTextArtistName: \"\",\n        //duration: \"\",\n        fullName: \"\",\n        labelName: \"\",\n        pLineText: \"\",\n        pLineYear: \"2020\",\n        genre: \"\",\n        parentalWarningType: \"\",\n        releaseType: \"\",\n        fileNameData: \"\",\n        fileNameImage: \"\",\n        icpn: \"\",\n        propertyIdTitleText: \"\",\n        resourceReleaseType: \"\",\n        territoryCode: \"\",\n        releaseLabelName: \"\",\n        releaseTitleText: \"\",\n        languageTitleText: \"\",\n        displayArtistName: \"\",\n        displayParentalWarningType: \"\",\n        originalReleaseDate: \"\"\n      },\n      partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n      parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n      releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n      territoryCodeOptions: [\"Worldwide\", \"Other\"]\n      /*\n      MessageDetails: {\n        messageId: \"\",\n        messageCreatedDateTime: \"\",\n        titleTextArtistName: \"\",\n        //duration: \"\",\n        fullName: \"\",\n        labelName: \"\",\n        year: \"\",\n        pLineText: \"\",\n        genre: \"\",\n        parentalWarningType: \"\",\n        releaseType: \"\",\n        fileNameData: \"\",\n        fileNameImage: \"\",\n        icpn: \"\",\n        propertyIdTitleText: \"\",\n        resourceReleaseType: \"\",\n        territoryCode: \"\",\n        releaseLabelName: \"\",\n        releaseTitleText: \"\",\n        languageTitleText: \"\",\n        displayArtistName: \"\",\n        displayParentalWarningType: \"\",\n        originalReleaseDate: \"\",\n      },\n      */\n      //partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n      //parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n      //releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n      //territoryCodeOptions: [\"Worldwide\", \"Other\"],\n\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      MessageDetails: _objectSpread({}, prevState.MessageDetails, {\n        originalReleaseDate: value\n      })\n    }), () => console.log(this.state.MessageDetails));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      MessageDetails: _objectSpread({}, prevState.MessageDetails, {\n        [name]: value\n      })\n    }), () => console.log(this.state.MessageDetails));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.MessageDetails;\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.blob();\n    }).then(function (blob) {\n      FileSaver.saveAs(blob, 'xml_output_300.xml');\n    });\n    /*.then(response => {\n     response.json().then(data => {\n       console.log(\"Successful\" + data);\n     });\n    }).catch(error => {\n       alert(error.message);\n    });\n    }\n    */\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      /*\n      MessageDetails: {\n        partnerName: \"\",\n        releaseDate: \"\",\n        songTitle: \"\",\n        artistName: \"\",\n        genre:\"\",\n        isrc: \"\",\n      }\n      */\n      MessageDetails: {\n        messageId: \"1-a\",\n        messageCreatedDateTime: Date().toLocaleString(),\n        isrc: \"\",\n        titleTextArtistName: \"\",\n        //duration: \"\",\n        fullName: \"\",\n        labelName: \"\",\n        pLineText: \"\",\n        pLineYear: \"\",\n        genre: \"\",\n        parentalWarningType: \"\",\n        releaseType: \"\",\n        fileNameData: \"\",\n        fileNameImage: \"\",\n        icpn: \"\",\n        propertyIdTitleText: \"\",\n        resourceReleaseType: \"\",\n        territoryCode: \"\",\n        releaseLabelName: \"\",\n        releaseTitleText: \"\",\n        languageTitleText: \"\",\n        displayArtistName: \"\",\n        displayParentalWarningType: \"\",\n        originalReleaseDate: \"\"\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"container-fluid\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      title: \"Partner Name\",\n      name: \"partnerName\",\n      options: this.state.partnerOptions,\n      value: this.state.MessageDetails.partnerName,\n      placeholder: \"Select Partner\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Select, {\n      title: \"Parental Warning Type\",\n      name: \"parentalWarningType\",\n      options: this.state.parentalWarningTypeOptions,\n      value: this.state.MessageDetails.parentalWarningType,\n      placeholder: \"Select Parental Warning Type\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Select, {\n      title: \"Release Type\",\n      name: \"releaseType\",\n      options: this.state.releaseTypeOptions,\n      value: this.state.MessageDetails.releaseType,\n      placeholder: \"Select Release Type\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Select, {\n      title: \"Territory Code\",\n      name: \"territoryCode\",\n      options: this.state.territoryCodeOptions,\n      value: this.state.MessageDetails.territoryCode,\n      placeholder: \"Select Territory Code\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: \"date\",\n      name: \"releaseDate\",\n      title: \"Release Date\",\n      value: this.state.MessageDetails.originalReleaseDate,\n      placeholder: \"Enter the release date\",\n      handleChange: this.handleReleaseDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Song Title\",\n      name: \"releaseTitleText\",\n      value: this.state.MessageDetails.releaseTitleText,\n      placeholder: \"Enter the song title\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Artist Name\",\n      name: \"titleTextArtistName\",\n      value: this.state.MessageDetails.titleTextArtistName,\n      placeholder: \"Enter the artist name\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Genre\",\n      name: \"genre\",\n      value: this.state.MessageDetails.genre,\n      placeholder: \"Enter the genre\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"text\",\n      title: \"ISRC\",\n      name: \"isrc\",\n      value: this.state.MessageDetails.isrc,\n      placeholder: \"Enter the ISRC code\",\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(Button, {\n      action: this.handleFormSubmit,\n      type: \"primary\",\n      title: \"Submit\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleClearForm,\n      type: \"secondary\",\n      title: \"Clear\",\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }\n    }), \" \");\n  }\n\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default IngestionTool;","map":{"version":3,"sources":["/Users/brianroytman/Dev/300Records_Dashboard/nodejs-frontend-react-dashboard/src/views/IngestionTool.jsx"],"names":["React","Component","Grid","Row","Col","FormGroup","ControlLabel","FormControl","TextField","makeStyles","FilledInput","FormHelperText","InputLabel","OutlinedInput","Card","FormInputs","UserCard","Radio","Select","Button","Input","avatar","saveAs","FileSaver","IngestionTool","constructor","props","state","MessageDetails","messageId","messageCreatedDateTime","Date","toLocaleString","isrc","titleTextArtistName","fullName","labelName","pLineText","pLineYear","genre","parentalWarningType","releaseType","fileNameData","fileNameImage","icpn","propertyIdTitleText","resourceReleaseType","territoryCode","releaseLabelName","releaseTitleText","languageTitleText","displayArtistName","displayParentalWarningType","originalReleaseDate","partnerOptions","parentalWarningTypeOptions","releaseTypeOptions","territoryCodeOptions","handleReleaseDate","bind","handleFormSubmit","handleClearForm","handleInput","e","value","target","setState","prevState","console","log","name","preventDefault","releaseData","fetch","method","body","JSON","stringify","headers","Accept","then","response","blob","render","partnerName","buttonStyle","margin"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  FormGroup,\n  ControlLabel,\n  FormControl\n} from \"react-bootstrap\";\n\nimport { TextField } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n//import Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Radio from  \"components/CustomRadio/CustomRadio.jsx\";\n//import Button from \"components/CustomButton/CustomButton.jsx\";\nimport Select from \"components/Select/Select.jsx\";\nimport Button from \"components/Button/Button.jsx\";\nimport Input from \"components/Input/Input.jsx\";\n\nimport avatar from \"assets/img/faces/face-3.jpg\";\nimport { saveAs } from 'file-saver';\nimport FileSaver from 'file-saver';\n\nclass IngestionTool extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n        MessageDetails: {\n          messageId: \"1-a\",\n          messageCreatedDateTime: Date().toLocaleString(),\n          isrc: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          pLineText: \"\",\n          pLineYear: \"2020\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          releaseType: \"\",\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseTitleText: \"\",\n          languageTitleText: \"\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        },\n        partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n        parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n        releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n        territoryCodeOptions: [\"Worldwide\", \"Other\"],\n\n\n        /*\n        MessageDetails: {\n          messageId: \"\",\n          messageCreatedDateTime: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          year: \"\",\n          pLineText: \"\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          releaseType: \"\",\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseTitleText: \"\",\n          languageTitleText: \"\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        },\n        */\n\n        //partnerOptions: [\"300 Entertainment\", \"The Royt Sound\"],\n        //parentalWarningTypeOptions: [\"Explicit\", \"Not Explicit\"],\n        //releaseTypeOptions: [\"Album\", \"EP\", \"Single\"],\n        //territoryCodeOptions: [\"Worldwide\", \"Other\"],\n\n    };\n    this.handleReleaseDate = this.handleReleaseDate.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleReleaseDate(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        MessageDetails: {\n          ...prevState.MessageDetails,\n          originalReleaseDate: value\n        }\n      }),\n      () => console.log(this.state.MessageDetails)\n    );\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        MessageDetails: {\n          ...prevState.MessageDetails,\n          [name]: value\n        }\n      }),\n      () => console.log(this.state.MessageDetails)\n    );\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let releaseData = this.state.MessageDetails;\n\n    fetch(\"/uploadLive\", {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      body: JSON.stringify(releaseData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function(response) {\n          return response.blob();\n    }).then(function(blob) {\n          FileSaver.saveAs(blob, 'xml_output_300.xml');\n    });\n     /*.then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    }).catch(error => {\n        alert(error.message);\n    });\n  }\n  */\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n        /*\n        MessageDetails: {\n          partnerName: \"\",\n          releaseDate: \"\",\n          songTitle: \"\",\n          artistName: \"\",\n          genre:\"\",\n          isrc: \"\",\n        }\n        */\n\n        MessageDetails: {\n          messageId: \"1-a\",\n          messageCreatedDateTime: Date().toLocaleString(),\n          isrc: \"\",\n          titleTextArtistName: \"\",\n          //duration: \"\",\n          fullName: \"\",\n          labelName: \"\",\n          pLineText: \"\",\n          pLineYear: \"\",\n          genre: \"\",\n          parentalWarningType: \"\",\n          releaseType: \"\",\n          fileNameData: \"\",\n          fileNameImage: \"\",\n          icpn: \"\",\n          propertyIdTitleText: \"\",\n          resourceReleaseType: \"\",\n          territoryCode: \"\",\n          releaseLabelName: \"\",\n          releaseTitleText: \"\",\n          languageTitleText: \"\",\n          displayArtistName: \"\",\n          displayParentalWarningType: \"\",\n          originalReleaseDate: \"\",\n        }\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n        <Select\n          title={\"Partner Name\"}\n          name={\"partnerName\"}\n          options={this.state.partnerOptions}\n          value={this.state.MessageDetails.partnerName}\n          placeholder={\"Select Partner\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        <Select\n          title={\"Parental Warning Type\"}\n          name={\"parentalWarningType\"}\n          options={this.state.parentalWarningTypeOptions}\n          value={this.state.MessageDetails.parentalWarningType}\n          placeholder={\"Select Parental Warning Type\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        <Select\n          title={\"Release Type\"}\n          name={\"releaseType\"}\n          options={this.state.releaseTypeOptions}\n          value={this.state.MessageDetails.releaseType}\n          placeholder={\"Select Release Type\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        <Select\n          title={\"Territory Code\"}\n          name={\"territoryCode\"}\n          options={this.state.territoryCodeOptions}\n          value={this.state.MessageDetails.territoryCode}\n          placeholder={\"Select Territory Code\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the partner organization */}\n        <Input\n          inputType={\"date\"}\n          name={\"releaseDate\"}\n          title={\"Release Date\"}\n          value={this.state.MessageDetails.originalReleaseDate}\n          placeholder={\"Enter the release date\"}\n          handleChange={this.handleReleaseDate}\n        />{\" \"}\n        {/* Release Date */}\n        <Row>\n          <Col xs=\"6\">\n            <Input\n              inputType={\"text\"}\n              title={\"Song Title\"}\n              name={\"releaseTitleText\"}\n              value={this.state.MessageDetails.releaseTitleText}\n              placeholder={\"Enter the song title\"}\n              handleChange={this.handleInput}\n            />{\" \"}\n            {/* Name of the song */}\n          </Col>\n        <Col xs=\"6\">\n          <Input\n            inputType={\"text\"}\n            title={\"Artist Name\"}\n            name={\"titleTextArtistName\"}\n            value={this.state.MessageDetails.titleTextArtistName}\n            placeholder={\"Enter the artist name\"}\n            handleChange={this.handleInput}\n          />{\" \"}\n          {/* Name of the artist */}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"6\">\n            <Input\n              inputType={\"text\"}\n              title={\"Genre\"}\n              name={\"genre\"}\n              value={this.state.MessageDetails.genre}\n              placeholder={\"Enter the genre\"}\n              handleChange={this.handleInput}\n            />{\" \"}\n            {/* Name of the genre */}\n          </Col>\n          <Col xs=\"6\">\n            <Input\n              inputType={\"text\"}\n              title={\"ISRC\"}\n              name={\"isrc\"}\n              value={this.state.MessageDetails.isrc}\n              placeholder={\"Enter the ISRC code\"}\n              handleChange={this.handleInput}\n            />{\" \"}\n            {/* ISRC code for the song */}\n          </Col>\n        </Row>\n        <Button\n          action={this.handleFormSubmit}\n          type={\"primary\"}\n          title={\"Submit\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/*Submit */}\n        <Button\n          action={this.handleClearForm}\n          type={\"secondary\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/* Clear the form */}\n      </form>\n    );\n  }\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nexport default IngestionTool;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space_work_week.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (\"undefined\" !== typeof Reflect && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) {\n        return;\n      }\n\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n\n    if (null === object) {\n      break;\n    }\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar registerComponent = require(\"../../../core/component_registrator\");\n\nvar dateUtils = require(\"../../../core/utils/date\");\n\nvar workWeekUtils = require(\"./utils.work_week\");\n\nvar toMs = dateUtils.dateToMilliseconds;\n\nvar SchedulerWorkSpaceWeek = require(\"./ui.scheduler.work_space_week\");\n\nvar WORK_WEEK_CLASS = \"dx-scheduler-work-space-work-week\";\nvar dayIndexes = [1, 2, 3, 4, 5];\nvar weekCounter = 0;\n\nvar SchedulerWorkSpaceWorkWeek = function (_SchedulerWorkSpaceWe) {\n  _inherits(SchedulerWorkSpaceWorkWeek, _SchedulerWorkSpaceWe);\n\n  var _super = _createSuper(SchedulerWorkSpaceWorkWeek);\n\n  function SchedulerWorkSpaceWorkWeek() {\n    var _this;\n\n    _classCallCheck(this, SchedulerWorkSpaceWorkWeek);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isSkippedData = workWeekUtils.isDataOnWeekend;\n    _this._getWeekendsCount = workWeekUtils.getWeekendsCount;\n    return _this;\n  }\n\n  _createClass(SchedulerWorkSpaceWorkWeek, [{\n    key: \"_getElementClass\",\n    value: function value() {\n      return WORK_WEEK_CLASS;\n    }\n  }, {\n    key: \"_getCellCount\",\n    value: function value() {\n      return 5 * this.option(\"intervalCount\");\n    }\n  }, {\n    key: \"_firstDayOfWeek\",\n    value: function value() {\n      return workWeekUtils.getFirstDayOfWeek(this.option(\"firstDayOfWeek\"));\n    }\n  }, {\n    key: \"_getDateByIndex\",\n    value: function value(headerIndex) {\n      var resultDate = new Date(this._firstViewDate);\n\n      if (headerIndex % this._getCellCount() === 0) {\n        weekCounter = 0;\n      }\n\n      resultDate.setDate(this._firstViewDate.getDate() + headerIndex + weekCounter);\n      var index = resultDate.getDay();\n\n      while (dayIndexes.indexOf(index) === -1) {\n        resultDate.setDate(resultDate.getDate() + 1);\n        index = resultDate.getDay();\n        weekCounter++;\n      }\n\n      return resultDate;\n    }\n  }, {\n    key: \"_renderView\",\n    value: function value() {\n      weekCounter = 0;\n\n      _get(_getPrototypeOf(SchedulerWorkSpaceWorkWeek.prototype), \"_renderView\", this).call(this);\n    }\n  }, {\n    key: \"_setFirstViewDate\",\n    value: function value() {\n      this._firstViewDate = workWeekUtils.getFirstViewDate(this._getViewStartByOptions(), this._firstDayOfWeek());\n\n      this._setStartDayHour(this._firstViewDate);\n    }\n  }, {\n    key: \"_getOffsetByCount\",\n    value: function value(cellIndex) {\n      var cellsInGroup = this._getCellCount();\n\n      var inGroup = Math.floor(cellIndex / cellsInGroup);\n      cellIndex -= cellsInGroup * inGroup;\n      var weekendCount = Math.floor(cellIndex / 5);\n      return toMs(\"day\") * weekendCount * 2;\n    }\n  }]);\n\n  return SchedulerWorkSpaceWorkWeek;\n}(SchedulerWorkSpaceWeek);\n\nregisterComponent(\"dxSchedulerWorkSpaceWorkWeek\", SchedulerWorkSpaceWorkWeek);\nmodule.exports = SchedulerWorkSpaceWorkWeek;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/timezones/ui.scheduler.timezone_editor.js)\r\n * Version: 20.1.7\r\n * Build date: Tue Aug 25 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../../core/renderer\");\n\nvar registerComponent = require(\"../../../core/component_registrator\");\n\nvar extend = require(\"../../../core/utils/extend\").extend;\n\nvar publisherMixin = require(\"../ui.scheduler.publisher_mixin\");\n\nvar messageLocalization = require(\"../../../localization/message\");\n\nvar Editor = require(\"../../editor/editor\");\n\nvar SelectBox = require(\"../../select_box\");\n\nvar TIMEZONE_EDITOR_CLASS = \"dx-timezone-editor\";\nvar TIMEZONE_DISPLAY_NAME_SELECTBOX_CLASS = \"dx-timezone-display-name\";\nvar TIMEZONE_IANA_ID_SELECTBOX_CLASS = \"dx-timezone-iana-id\";\nvar SchedulerTimezoneEditor = Editor.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      value: null\n    });\n  },\n  _createComponent: function _createComponent(element, name, config) {\n    config = config || {};\n\n    this._extendConfig(config, {\n      readOnly: this.option(\"readOnly\")\n    });\n\n    return this.callBase(element, name, config);\n  },\n  _init: function _init() {\n    this.callBase();\n    this.$element().addClass(TIMEZONE_EDITOR_CLASS);\n  },\n  _render: function _render() {\n    this._renderDisplayNameEditor();\n\n    this._renderIanaIdEditor();\n\n    this.callBase();\n  },\n  _renderDisplayNameEditor: function _renderDisplayNameEditor() {\n    var noTzTitle = messageLocalization.format(\"dxScheduler-noTimezoneTitle\");\n    var value = this.invoke(\"getTimezoneDisplayNameById\", this.option(\"value\")) || noTzTitle;\n    this._displayNameEditor = this._renderSelectBox(TIMEZONE_DISPLAY_NAME_SELECTBOX_CLASS, {\n      items: [noTzTitle].concat(this.invoke(\"getTimezonesDisplayName\")),\n      value: value,\n      onValueChanged: function (e) {\n        this._processDisplayNameChanging(e.value);\n      }.bind(this)\n    });\n  },\n  _renderIanaIdEditor: function _renderIanaIdEditor() {\n    this._ianaIdEditor = this._renderSelectBox(TIMEZONE_IANA_ID_SELECTBOX_CLASS, {\n      items: this._idsDataSource(),\n      value: this.option(\"value\"),\n      onValueChanged: function (e) {\n        this.option(\"value\", e.value);\n      }.bind(this),\n      valueExpr: \"id\",\n      displayExpr: \"displayName\",\n      disabled: this._calculateIanaIdEditorDisabledState()\n    });\n  },\n  _renderSelectBox: function _renderSelectBox(cssClass, options) {\n    options = options || {};\n    var $element = $(\"<div>\").addClass(cssClass);\n\n    var selectBox = this._createComponent($element, SelectBox, options);\n\n    this.$element().append($element);\n    return selectBox;\n  },\n  _idsDataSource: function _idsDataSource() {\n    return this.invoke(\"getSimilarTimezones\", this.option(\"value\"));\n  },\n  _calculateIanaIdEditorDisabledState: function _calculateIanaIdEditorDisabledState() {\n    return !this.option(\"value\");\n  },\n  _processDisplayNameChanging: function _processDisplayNameChanging(displayName) {\n    var tzIds = this.invoke(\"getTimezonesIdsByDisplayName\", displayName);\n    var tzId = tzIds.length ? tzIds[0].id : null;\n    this.option(\"value\", tzId);\n\n    this._ianaIdEditor.option({\n      value: tzId,\n      items: this._idsDataSource(tzIds),\n      disabled: this._calculateIanaIdEditorDisabledState()\n    });\n  },\n  _optionChanged: function _optionChanged(args) {\n    var value = args.value;\n\n    switch (args.name) {\n      case \"value\":\n        this._ianaIdEditor.option({\n          value: value,\n          items: this._idsDataSource()\n        });\n\n        if (value) {\n          this._displayNameEditor.option(\"value\", this.invoke(\"getTimezoneDisplayNameById\", value));\n        } else {\n          this._displayNameEditor.option(\"value\", messageLocalization.format(\"dxScheduler-noTimezoneTitle\"));\n        }\n\n        this.callBase(args);\n        break;\n\n      case \"readOnly\":\n        this._displayNameEditor && this._displayNameEditor.option(\"readOnly\", value);\n        this._ianaIdEditor && this._ianaIdEditor.option(\"readOnly\", value);\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n}).include(publisherMixin);\nregisterComponent(\"dxSchedulerTimezoneEditor\", {}, SchedulerTimezoneEditor);\nmodule.exports = SchedulerTimezoneEditor;","map":null,"metadata":{},"sourceType":"script"}